{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/copy-relationships/[id]",
      "regex": "^/api/copy\\-relationships/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/copy\\-relationships/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/leaders/[id]",
      "regex": "^/api/leaders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/leaders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/trades/[id]/analytics",
      "regex": "^/api/trades/([^/]+?)/analytics(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/trades/(?<nxtPid>[^/]+?)/analytics(?:/)?$"
    },
    {
      "page": "/api/watchlist/[symbol]",
      "regex": "^/api/watchlist/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPsymbol": "nxtPsymbol"
      },
      "namedRegex": "^/api/watchlist/(?<nxtPsymbol>[^/]+?)(?:/)?$"
    },
    {
      "page": "/leaders/[id]",
      "regex": "^/leaders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/leaders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/sign-in/[[...sign-in]]",
      "regex": "^/sign\\-in(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPsignin": "nxtPsign-in"
      },
      "namedRegex": "^/sign\\-in(?:/(?<nxtPsignin>.+?))?(?:/)?$"
    },
    {
      "page": "/sign-up/[[...sign-up]]",
      "regex": "^/sign\\-up(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPsignup": "nxtPsign-up"
      },
      "namedRegex": "^/sign\\-up(?:/(?<nxtPsignup>.+?))?(?:/)?$"
    },
    {
      "page": "/trades/[id]/analytics",
      "regex": "^/trades/([^/]+?)/analytics(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/trades/(?<nxtPid>[^/]+?)/analytics(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/branding",
      "regex": "^/branding(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/branding(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/analytics",
      "regex": "^/dashboard/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/analytics(?:/)?$"
    },
    {
      "page": "/dashboard/portfolio",
      "regex": "^/dashboard/portfolio(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/portfolio(?:/)?$"
    },
    {
      "page": "/dashboard/settings",
      "regex": "^/dashboard/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/settings(?:/)?$"
    },
    {
      "page": "/dashboard/trades",
      "regex": "^/dashboard/trades(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/trades(?:/)?$"
    },
    {
      "page": "/faq",
      "regex": "^/faq(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faq(?:/)?$"
    },
    {
      "page": "/features",
      "regex": "^/features(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/features(?:/)?$"
    },
    {
      "page": "/follower/orders",
      "regex": "^/follower/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/follower/orders(?:/)?$"
    },
    {
      "page": "/leader",
      "regex": "^/leader(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leader(?:/)?$"
    },
    {
      "page": "/leader/orders",
      "regex": "^/leader/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leader/orders(?:/)?$"
    },
    {
      "page": "/leaders",
      "regex": "^/leaders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leaders(?:/)?$"
    },
    {
      "page": "/onboarding",
      "regex": "^/onboarding(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/onboarding(?:/)?$"
    },
    {
      "page": "/testimonials",
      "regex": "^/testimonials(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/testimonials(?:/)?$"
    },
    {
      "page": "/watchlist",
      "regex": "^/watchlist(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/watchlist(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}