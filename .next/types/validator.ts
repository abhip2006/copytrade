// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(authenticated)/onboarding/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding">> = Specific
  const handler = {} as typeof import("../../src/app/(authenticated)/onboarding/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/branding/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/branding">> = Specific
  const handler = {} as typeof import("../../src/app/branding/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/portfolio/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/portfolio">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/portfolio/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/settings">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/trades/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/trades">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/trades/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/faq/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/faq">> = Specific
  const handler = {} as typeof import("../../src/app/faq/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/features/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/features">> = Specific
  const handler = {} as typeof import("../../src/app/features/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/follower/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/follower/orders">> = Specific
  const handler = {} as typeof import("../../src/app/follower/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/leader/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/leader/orders">> = Specific
  const handler = {} as typeof import("../../src/app/leader/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/leader/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/leader">> = Specific
  const handler = {} as typeof import("../../src/app/leader/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/leaders/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/leaders/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/leaders/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/leaders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/leaders">> = Specific
  const handler = {} as typeof import("../../src/app/leaders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/sign-in/[[...sign-in]]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sign-in/[[...sign-in]]">> = Specific
  const handler = {} as typeof import("../../src/app/sign-in/[[...sign-in]]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/sign-up/[[...sign-up]]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sign-up/[[...sign-up]]">> = Specific
  const handler = {} as typeof import("../../src/app/sign-up/[[...sign-up]]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/testimonials/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/testimonials">> = Specific
  const handler = {} as typeof import("../../src/app/testimonials/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/trades/[id]/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/trades/[id]/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/trades/[id]/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/watchlist/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/watchlist">> = Specific
  const handler = {} as typeof import("../../src/app/watchlist/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/chart-data/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chart-data">> = Specific
  const handler = {} as typeof import("../../src/app/api/chart-data/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/connect/redirect/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/connect/redirect">> = Specific
  const handler = {} as typeof import("../../src/app/api/connect/redirect/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/connections/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/connections">> = Specific
  const handler = {} as typeof import("../../src/app/api/connections/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/copy-relationships/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/copy-relationships/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/copy-relationships/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/copy-relationships/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/copy-relationships">> = Specific
  const handler = {} as typeof import("../../src/app/api/copy-relationships/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/copy/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/copy/settings">> = Specific
  const handler = {} as typeof import("../../src/app/api/copy/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/cron/detect-trades/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/detect-trades">> = Specific
  const handler = {} as typeof import("../../src/app/api/cron/detect-trades/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/cron/monitor-positions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/monitor-positions">> = Specific
  const handler = {} as typeof import("../../src/app/api/cron/monitor-positions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/cron/process-trades/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/process-trades">> = Specific
  const handler = {} as typeof import("../../src/app/api/cron/process-trades/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leaders/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leaders/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/leaders/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leaders/discover/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leaders/discover">> = Specific
  const handler = {} as typeof import("../../src/app/api/leaders/discover/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/options/chain/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/options/chain">> = Specific
  const handler = {} as typeof import("../../src/app/api/options/chain/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/orders/cancel/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/cancel">> = Specific
  const handler = {} as typeof import("../../src/app/api/orders/cancel/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/orders/replace/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/replace">> = Specific
  const handler = {} as typeof import("../../src/app/api/orders/replace/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders">> = Specific
  const handler = {} as typeof import("../../src/app/api/orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/portfolio/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/portfolio">> = Specific
  const handler = {} as typeof import("../../src/app/api/portfolio/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/portfolio/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/portfolio/stats">> = Specific
  const handler = {} as typeof import("../../src/app/api/portfolio/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/positions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/positions">> = Specific
  const handler = {} as typeof import("../../src/app/api/positions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/quotes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/quotes">> = Specific
  const handler = {} as typeof import("../../src/app/api/quotes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/search-symbols/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/search-symbols">> = Specific
  const handler = {} as typeof import("../../src/app/api/search-symbols/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/snaptrade/accounts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/snaptrade/accounts">> = Specific
  const handler = {} as typeof import("../../src/app/api/snaptrade/accounts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/snaptrade/connect/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/snaptrade/connect">> = Specific
  const handler = {} as typeof import("../../src/app/api/snaptrade/connect/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/snaptrade/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/snaptrade/register">> = Specific
  const handler = {} as typeof import("../../src/app/api/snaptrade/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/symbols/search/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/symbols/search">> = Specific
  const handler = {} as typeof import("../../src/app/api/symbols/search/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/[id]/analytics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/[id]/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/[id]/analytics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/detect/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/detect">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/detect/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/execute/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/execute">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/execute/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/history/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/history">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/history/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/impact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/impact">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/impact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trades/process/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trades/process">> = Specific
  const handler = {} as typeof import("../../src/app/api/trades/process/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/user/check-onboarding/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/check-onboarding">> = Specific
  const handler = {} as typeof import("../../src/app/api/user/check-onboarding/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/user/role/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/role">> = Specific
  const handler = {} as typeof import("../../src/app/api/user/role/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/watchlist/[symbol]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/watchlist/[symbol]">> = Specific
  const handler = {} as typeof import("../../src/app/api/watchlist/[symbol]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/watchlist/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/watchlist">> = Specific
  const handler = {} as typeof import("../../src/app/api/watchlist/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/webhooks/clerk/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/clerk">> = Specific
  const handler = {} as typeof import("../../src/app/api/webhooks/clerk/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/webhooks/snaptrade/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/snaptrade">> = Specific
  const handler = {} as typeof import("../../src/app/api/webhooks/snaptrade/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/leader/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/leader">> = Specific
  const handler = {} as typeof import("../../src/app/leader/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
