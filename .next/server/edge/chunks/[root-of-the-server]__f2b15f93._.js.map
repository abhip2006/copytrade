{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["/**\n * Clerk Middleware Configuration\n *\n * This middleware protects routes that require authentication.\n *\n * Setup Instructions:\n * 1. Add NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY and CLERK_SECRET_KEY to your .env.local\n * 2. Configure publicRoutes array to specify which routes are publicly accessible\n * 3. Configure ignoredRoutes for static assets and API routes that should skip auth\n *\n * Learn more: https://clerk.com/docs/references/nextjs/clerk-middleware\n */\n\nimport { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server';\n\n// Define public routes that don't require authentication\nconst isPublicRoute = createRouteMatcher([\n  '/',\n  '/sign-in(.*)',\n  '/sign-up(.*)',\n  '/leaders',\n  '/features',\n  '/testimonials',\n  '/faq',\n  '/api/webhooks(.*)',\n]);\n\n// Define routes that should be completely ignored by Clerk\nconst isIgnoredRoute = createRouteMatcher([\n  '/api/webhooks(.*)',\n]);\n\nexport default clerkMiddleware(async (auth, request) => {\n  // Skip auth check for ignored routes\n  if (isIgnoredRoute(request)) {\n    return;\n  }\n\n  // Protect all routes that are not public\n  if (!isPublicRoute(request)) {\n    await auth.protect();\n  }\n});\n\nexport const config = {\n  matcher: [\n    // Skip Next.js internals and all static files, unless found in search params\n    '/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',\n    // Always run for API routes\n    '/(api|trpc)(.*)',\n  ],\n};"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;;;;AAED;AAAA;;AAEA,yDAAyD;AACzD,MAAM,gBAAgB,IAAA,wMAAkB,EAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,2DAA2D;AAC3D,MAAM,iBAAiB,IAAA,wMAAkB,EAAC;IACxC;CACD;uCAEc,IAAA,wMAAe,EAAC,OAAO,MAAM;IAC1C,qCAAqC;IACrC,IAAI,eAAe,UAAU;QAC3B;IACF;IAEA,yCAAyC;IACzC,IAAI,CAAC,cAAc,UAAU;QAC3B,MAAM,KAAK,OAAO;IACpB;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,6EAA6E;QAC7E;QACA,4BAA4B;QAC5B;KACD;AACH"}}]
}