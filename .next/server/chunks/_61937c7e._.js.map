{"version":3,"sources":["turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/bind.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/utils.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/AxiosError.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/toFormData.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/buildURL.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/InterceptorManager.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/defaults/transitional.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/platform/node/classes/URLSearchParams.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/platform/node/index.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/platform/common/utils.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/platform/index.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/toURLEncodedForm.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/formDataToJSON.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/defaults/index.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/parseHeaders.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/AxiosHeaders.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/transformData.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/cancel/isCancel.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/cancel/CanceledError.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/settle.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/combineURLs.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/buildFullPath.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/env/data.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/parseProtocol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/fromDataURI.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/AxiosTransformStream.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/readBlob.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/formDataToStream.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/callbackify.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/speedometer.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/throttle.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/progressEventReducer.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/adapters/http.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/cookies.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/mergeConfig.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/resolveConfig.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/adapters/xhr.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/composeSignals.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/trackStream.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/adapters/fetch.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/adapters/adapters.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/dispatchRequest.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/validator.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/core/Axios.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/cancel/CancelToken.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/spread.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/isAxiosError.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/helpers/HttpStatusCode.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/node_modules/axios/lib/axios.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/base.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/requestAfterHook.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/requestBeforeUrlHook.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/error.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/common.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/requestBeforeHook.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/account-information-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/account-information-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/api-status-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/api-status-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/authentication-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/authentication-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/connections-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/connections-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/options-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/options-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/reference-data-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/reference-data-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/trading-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/trading-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/transactions-and-reporting-api-generated.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api/transactions-and-reporting-api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/api.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/configuration.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-balance.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-balance-total.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-holdings.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-holdings-account.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-information-get-user-account-order-detail-request.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-child-brokerage-order-ids.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-option-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-quote-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-quote-universal-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-status.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-order-record-universal-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-simple.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-sync-status.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-universal-activity.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-universal-activity-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-universal-activity-option-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/account-universal-activity-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/action-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/action-strict-with-options.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/authentication-login-snap-trade-user200-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/balance.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/balance-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-authorization.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-authorization-disabled-confirmation.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-authorization-refresh-confirmation.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-authorization-type-read-only.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-authorization-type-read-only-brokerage.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-instruments-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/brokerage-type.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/cancel-order-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/child-brokerage-order-ids.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/connections-session-events200-response-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/crypto-order-form.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/crypto-order-preview.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/crypto-order-preview-estimated-fee.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/crypto-trading-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/cryptocurrency-pair.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/cryptocurrency-pair-quote.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/delete-user-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/dividend-at-date.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/encrypted-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/encrypted-response-encrypted-message-data.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/exchange.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/exchange-rate-pairs.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/figi-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/holdings-status.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/login-redirect-uri.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-and-impact.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-balance.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-form.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-form-bracket.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-form-notional-value.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-form-with-options.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-impact.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-replace-form.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/manual-trade-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-action-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-instrument-type.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-leg.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-order-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-order-type-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-price-effect-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-trade-form.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/mleg-trading-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model400-failed-request-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model401-failed-request-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model402-brokerage-auth-already-disabled-exception.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model402-brokerage-auth-disabled-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model403-failed-request-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model403-feature-not-enabled-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model404-failed-request-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model425-failed-request-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/model500-unexpected-exception-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/monthly-dividends.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/net-contributions.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/net-dividend.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/notional-value.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-brokerage-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-chain-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-chain-inner-chain-per-root-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-chain-inner-chain-per-root-inner-chain-per-strike-price-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-leg.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-strategy.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/option-strategy-legs-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/options-position.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/options-position-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/options-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/order-type-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/order-updated-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/paginated-universal-activity.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/pagination-details.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/partner-data.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/past-value.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/performance-custom.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/position.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/position-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/position-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/rate-of-return-object.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/rate-of-return-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/recent-orders-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/security-type.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/session-event.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/simple-order-form.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/snap-trade-holdings-account.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/snap-trade-holdings-total-value.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/snap-trade-login-user-request-body.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/snap-trade-register-user-request-body.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/status.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/stop-loss.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/strategy-order-record.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/strategy-quotes.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/strategy-quotes-greek.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/sub-period-return-rate.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbol-currency.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbol-exchange.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbol-figi-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbol-query.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/symbols-quotes-inner.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/take-profit.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/time-in-force-strict.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/trading-instrument.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/trading-search-cryptocurrency-pair-instruments200-response.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/transactions-status.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/usexchange.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/underlying-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/underlying-symbol-exchange.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/underlying-symbol-type.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/universal-activity.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/universal-symbol.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/user-idand-secret.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/validated-trade-body.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/models/index.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/client-custom.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/client.js","turbopack:///[project]/node_modules/snaptrade-typescript-sdk/dist/index.js","turbopack:///[project]/src/lib/snaptrade/client.ts"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport url from 'url';\nexport default url.URLSearchParams;\n","import crypto from 'crypto';\nimport URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  const randomValues = new Uint32Array(size);\n  crypto.randomFillSync(randomValues);\n  for (let i = 0; i < size; i++) {\n    str += alphabet[randomValues[i] % length];\n  }\n\n  return str;\n}\n\n\nexport default {\n  isNode: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob: typeof Blob !== 'undefined' && Blob || null\n  },\n  ALPHABET,\n  generateString,\n  protocols: [ 'http', 'https', 'file', 'data' ]\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","export const VERSION = \"1.10.0\";","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport parseProtocol from './parseProtocol.js';\nimport platform from '../platform/index.js';\n\nconst DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n\n/**\n * Parse data uri to a Buffer or Blob\n *\n * @param {String} uri\n * @param {?Boolean} asBlob\n * @param {?Object} options\n * @param {?Function} options.Blob\n *\n * @returns {Buffer|Blob}\n */\nexport default function fromDataURI(uri, asBlob, options) {\n  const _Blob = options && options.Blob || platform.classes.Blob;\n  const protocol = parseProtocol(uri);\n\n  if (asBlob === undefined && _Blob) {\n    asBlob = true;\n  }\n\n  if (protocol === 'data') {\n    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;\n\n    const match = DATA_URL_PATTERN.exec(uri);\n\n    if (!match) {\n      throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);\n    }\n\n    const mime = match[1];\n    const isBase64 = match[2];\n    const body = match[3];\n    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? 'base64' : 'utf8');\n\n    if (asBlob) {\n      if (!_Blob) {\n        throw new AxiosError('Blob is not supported', AxiosError.ERR_NOT_SUPPORT);\n      }\n\n      return new _Blob([buffer], {type: mime});\n    }\n\n    return buffer;\n  }\n\n  throw new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_NOT_SUPPORT);\n}\n","'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const internals = this[kInternals] = {\n      timeWindow: options.timeWindow,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    const pushChunk = (_chunk, _callback) => {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      internals.isCaptured && this.emit('progress', internals.bytesSeen);\n\n      if (this.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n}\n\nexport default AxiosTransformStream;\n","const {asyncIterator} = Symbol;\n\nconst readBlob = async function* (blob) {\n  if (blob.stream) {\n    yield* blob.stream()\n  } else if (blob.arrayBuffer) {\n    yield await blob.arrayBuffer()\n  } else if (blob[asyncIterator]) {\n    yield* blob[asyncIterator]();\n  } else {\n    yield blob;\n  }\n}\n\nexport default readBlob;\n","import util from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\nimport platform from \"../platform/index.js\";\n\nconst BOUNDARY_ALPHABET = platform.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = typeof TextEncoder === 'function' ? new TextEncoder() : new util.TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + platform.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n","\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n","import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n}\n\nexport default callbackify;\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport proxyFromEnv from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport {EventEmitter} from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\nconst flushOnFinish = (stream, [throttled, flush]) => {\n  stream\n    .on('end', flush)\n    .on('error', flush);\n\n  return throttled;\n}\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options, responseDetails) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options, responseDetails);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = proxyFromEnv.getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          if (err) {\n            return cb(err);\n          }\n\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : undefined);\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const {onUploadProgress, onDownloadProgress} = config;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data) || utils.isFile(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', flushOnFinish(\n        data,\n        progressEventDecorator(\n          contentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)\n        )\n      ));\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname.startsWith(\"[\") ? parsed.hostname.slice(1, -1) : parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress || maxDownloadRate) {\n        const transformStream = new AxiosTransformStream({\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', flushOnFinish(\n          transformStream,\n          progressEventDecorator(\n            responseLength,\n            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)\n          )\n        ));\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'stream has been aborted',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://api.snaptrade.com/api/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nclass BaseAPI {\n    constructor(configuration, basePath = exports.BASE_PATH, axios = axios_1.default) {\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n}\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nexports.RequiredError = RequiredError;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestAfterHook = void 0;\n// Function to check if the code is running in a Node.js environment\nfunction isNodeEnvironment() {\n    return (typeof process !== \"undefined\" && process.versions && process.versions.node);\n}\n// Compute HMAC SHA256\nfunction computeHmacSha256(message, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isNodeEnvironment()) {\n            // Node.js environment\n            const crypto = require(\"crypto\");\n            const hmac = crypto.createHmac(\"sha256\", key);\n            hmac.update(message);\n            return hmac.digest(\"base64\"); // or return Buffer if you want raw bytes\n        }\n        else {\n            // Browser environment\n            const encoder = new TextEncoder();\n            const keyBuffer = encoder.encode(key);\n            const msgBuffer = encoder.encode(message);\n            const cryptoKey = yield globalThis.crypto.subtle.importKey(\"raw\", keyBuffer, { name: \"HMAC\", hash: \"SHA-256\" }, false, [\"sign\"]);\n            const signature = yield globalThis.crypto.subtle.sign(\"HMAC\", cryptoKey, msgBuffer);\n            const byteArray = Array.from(new Uint8Array(signature));\n            // Convert byte array to base64\n            const base64 = btoa(String.fromCharCode.apply(null, byteArray));\n            return base64;\n        }\n    });\n}\nconst JSONstringifyOrder = (obj) => {\n    var allKeys = [];\n    var seen = {};\n    JSON.stringify(obj, function (key, value) {\n        if (!(key in seen)) {\n            allKeys.push(key);\n            seen[key] = null;\n        }\n        return value;\n    });\n    allKeys.sort();\n    return JSON.stringify(obj, allKeys);\n};\nfunction requestAfterHook(request) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { configuration, basePath, axiosArgs, url } = request;\n        if ((configuration === null || configuration === void 0 ? void 0 : configuration.consumerKey) === undefined)\n            throw Error(\"Consumer key is required\");\n        const consumerKey = encodeURI(configuration.consumerKey);\n        const requestData = axiosArgs.options.data === undefined || axiosArgs.options.data === \"{}\"\n            ? null\n            : JSON.parse(axiosArgs.options.data);\n        const path = axiosArgs.url.indexOf(\"?\") === -1\n            ? `${axiosArgs.url}`\n            : `${axiosArgs.url.split(\"?\")[0]}`;\n        const requestPath = `/api/v1${path}`;\n        const requestQuery = url\n            .replace(basePath, \"\")\n            .replace(path, \"\")\n            .replace(\"?\", \"\");\n        const sigObject = {\n            content: requestData,\n            path: requestPath,\n            query: requestQuery,\n        };\n        const sigContent = JSONstringifyOrder(sigObject);\n        const signature = yield computeHmacSha256(sigContent, consumerKey);\n        if (axiosArgs.options.headers)\n            axiosArgs.options.headers[\"Signature\"] = signature;\n    });\n}\nexports.requestAfterHook = requestAfterHook;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestBeforeUrlHook = void 0;\nfunction requestBeforeUrlHook(request) { }\nexports.requestBeforeUrlHook = requestBeforeUrlHook;\n","\"use strict\";\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIfJson = exports.readableStreamToString = exports.SnaptradeError = void 0;\n/**\n * This class provides a wrapper for network errors when making requests to SnapTrade\n */\nclass SnaptradeError extends Error {\n    constructor(axiosError, responseBody, headers) {\n        var _a, _b, _c, _d, _e;\n        const message = axiosError.message + \"\\nRESPONSE HEADERS:\\n\" + JSON.stringify(headers, null, 2);\n        super(message);\n        this.name = \"SnaptradeError\";\n        this.code = axiosError.code;\n        this.method = (_b = (_a = axiosError.config) === null || _a === void 0 ? void 0 : _a.method) === null || _b === void 0 ? void 0 : _b.toUpperCase();\n        this.url = (_c = axiosError.config) === null || _c === void 0 ? void 0 : _c.url;\n        this.status = (_d = axiosError.response) === null || _d === void 0 ? void 0 : _d.status;\n        this.statusText = (_e = axiosError.response) === null || _e === void 0 ? void 0 : _e.statusText;\n        this.responseBody = responseBody;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            method: this.method,\n            url: this.url,\n            code: this.code,\n            status: this.status,\n            statusText: this.statusText,\n            responseBody: this.responseBody,\n        };\n    }\n}\nexports.SnaptradeError = SnaptradeError;\nfunction readableStreamToString(stream) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Step 1: Create a new TextDecoder\n        const decoder = new TextDecoder();\n        // Step 2: Create a new ReadableStreamDefaultReader\n        const reader = stream.getReader();\n        // Step 3: Initialize an empty string to hold the result\n        let result = \"\";\n        try {\n            while (true) {\n                // Step 4: Read data from the stream\n                const { done, value } = yield reader.read();\n                // If there is no more data to read, break the loop\n                if (done)\n                    break;\n                // Convert the chunk of data to a string using the TextDecoder\n                const chunk = decoder.decode(value, { stream: true });\n                // Concatenate the chunk to the result\n                result += chunk;\n            }\n        }\n        finally {\n            // Step 5: Release the ReadableStreamDefaultReader when done or in case of an error\n            reader.releaseLock();\n        }\n        // Return the final result as a string\n        return result;\n    });\n}\nexports.readableStreamToString = readableStreamToString;\nfunction parseIfJson(input) {\n    if (typeof input !== \"string\") {\n        // If the input is not a string, return the original input\n        return input;\n    }\n    try {\n        // Attempt to parse the input as JSON\n        const parsedJSON = JSON.parse(input);\n        // Check if the parsed result is an object (not an array or primitive value)\n        if (typeof parsedJSON === \"object\" && parsedJSON !== null) {\n            return parsedJSON;\n        }\n        else {\n            // Return the original input if the parsed result is not an object\n            return input;\n        }\n    }\n    catch (error) {\n        // Return the original input if parsing fails (invalid JSON)\n        return input;\n    }\n}\nexports.parseIfJson = parseIfJson;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowser = exports.createRequestFunction = exports.removeTrailingSlash = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\nconst axios_1 = require(\"axios\");\nconst requestAfterHook_1 = require(\"./requestAfterHook\");\nconst requestBeforeUrlHook_1 = require(\"./requestBeforeUrlHook\");\nconst error_1 = require(\"./error\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nconst assertParamExists = function (functionName, paramName, paramValue) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n};\nexports.assertParamExists = assertParamExists;\n/**\n *\n * @export\n */\nconst setApiKeyToObject = function ({ object, key, type, keyParamName, configuration, prefix }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        key = key ? key : keyParamName;\n        let apiKey = null;\n        if (configuration && configuration.apiKey) {\n            if (typeof configuration.apiKey === 'function')\n                apiKey = yield configuration.apiKey(keyParamName);\n            else if (typeof configuration.apiKey === 'string')\n                apiKey = configuration.apiKey;\n            else if (typeof configuration.apiKey === 'object') {\n                if (keyParamName in configuration.apiKey)\n                    apiKey = configuration.apiKey[keyParamName];\n            }\n            else\n                throw Error(`Unexpected type ${typeof configuration.apiKey} for Configuration.apiKey`);\n        }\n        if (!apiKey)\n            return;\n        object[key] = prefix !== undefined ? `${prefix}${apiKey}` : apiKey;\n        if (type === \"Cookie\")\n            object[key] = `${keyParamName}=${object[key]}`;\n    });\n};\nexports.setApiKeyToObject = setApiKeyToObject;\n/**\n *\n * @export\n */\nconst setBasicAuthToObject = function (object, configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n};\nexports.setBasicAuthToObject = setBasicAuthToObject;\n/**\n *\n * @export\n */\nconst setBearerAuthToObject = function (object, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const accessToken = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken()\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n    });\n};\nexports.setBearerAuthToObject = setBearerAuthToObject;\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        }\n        else {\n            Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n        }\n    }\n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        }\n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n/**\n *\n * @export\n */\nconst setSearchParams = function (url, ...objects) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n};\nexports.setSearchParams = setSearchParams;\n/**\n *\n * @export\n */\nconst serializeDataIfNeeded = function (value, requestOptions, configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n};\nexports.serializeDataIfNeeded = serializeDataIfNeeded;\n/**\n *\n * @export\n */\nconst toPathString = function (url) {\n    return (0, exports.removeTrailingSlash)(url.pathname) + url.search + url.hash;\n};\nexports.toPathString = toPathString;\n/**\n * remove trailing slash from string\n */\nconst removeTrailingSlash = function (url) {\n    return url.replace(/\\/$/, \"\");\n};\nexports.removeTrailingSlash = removeTrailingSlash;\n/**\n * Wrap an axios request in a try/catch block to catch network errors and parse the response body\n */\nfunction wrapAxiosRequest(makeRequest) {\n    var _a, _b, _c, _d, _e, _f;\n    return __awaiter(this, void 0, void 0, function* () {\n        const maxAttempts = 3;\n        let attempt = 0;\n        let delay = 5000;\n        while (attempt < maxAttempts) {\n            try {\n                return yield makeRequest();\n            }\n            catch (e) {\n                if (e instanceof axios_1.AxiosError && e.isAxiosError) {\n                    if (((_a = e.response) === null || _a === void 0 ? void 0 : _a.status) == 429) {\n                        attempt++;\n                        console.log(`429 error encountered, retrying in ${delay / 1000} seconds...`);\n                        yield new Promise(resolve => setTimeout(resolve, delay));\n                        delay *= 2;\n                        continue;\n                    }\n                    try {\n                        const responseBody = ((_b = e.response) === null || _b === void 0 ? void 0 : _b.data) instanceof ReadableStream\n                            ? yield (0, error_1.readableStreamToString)(e.response.data)\n                            : (_c = e.response) === null || _c === void 0 ? void 0 : _c.data;\n                        throw new error_1.SnaptradeError(e, (0, error_1.parseIfJson)(responseBody), (_d = e.response) === null || _d === void 0 ? void 0 : _d.headers);\n                    }\n                    catch (innerError) {\n                        if (innerError instanceof ReferenceError) {\n                            // Got: \"ReferenceError: ReadableStream is not defined\"\n                            // This means we are in a Node environment so just throw the original error\n                            throw new error_1.SnaptradeError(e, (_e = e.response) === null || _e === void 0 ? void 0 : _e.data, (_f = e.response) === null || _f === void 0 ? void 0 : _f.headers);\n                        }\n                        if (innerError instanceof error_1.SnaptradeError) {\n                            // Got \"SnaptradeError\" from the above try block\n                            throw innerError;\n                        }\n                        // Something unexpected happened: propagate the error\n                        throw e;\n                    }\n                }\n                throw e;\n            }\n        }\n        throw new Error(`Request failed after ${maxAttempts} retries due to 429 (rate limit) errors.`);\n    });\n}\n/**\n *\n * @export\n */\nconst createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n    return (axios = globalAxios, basePath = BASE_PATH) => __awaiter(this, void 0, void 0, function* () {\n        (0, requestBeforeUrlHook_1.requestBeforeUrlHook)({ axiosArgs, basePath, configuration });\n        const url = ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url;\n        yield (0, requestAfterHook_1.requestAfterHook)({ axiosArgs, basePath, url, configuration });\n        return wrapAxiosRequest(() => __awaiter(this, void 0, void 0, function* () { return yield axios.request(Object.assign(Object.assign({}, axiosArgs.options), { url })); }));\n    });\n};\nexports.createRequestFunction = createRequestFunction;\nfunction isBrowser() {\n    return typeof window !== \"undefined\";\n}\nexports.isBrowser = isBrowser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestBeforeHook = void 0;\nfunction requestBeforeHook(request) {\n    const { queryParameters } = request;\n    queryParameters[\"timestamp\"] = Math.round(new Date().getTime() / 1000).toString();\n}\nexports.requestBeforeHook = requestBeforeHook;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountInformationApiGenerated = exports.AccountInformationApiFactory = exports.AccountInformationApiFp = exports.AccountInformationApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * AccountInformationApi - axios parameter creator\n * @export\n */\nconst AccountInformationApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns all historical transactions for the specified account.  This endpoint is paginated with a default page size of 1000. The endpoint will return a maximum of 1000 transactions per request. See the query parameters for pagination options.  Transaction are returned in reverse chronological order, using the `trade_date` field.  The data returned here is always cached and refreshed once a day.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account activities\n         * @param {string} accountId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string | Date} [startDate] The start date (inclusive) of the transaction history to retrieve. If not provided, the default is the first transaction known to SnapTrade based on &#x60;trade_date&#x60;.\n         * @param {string | Date} [endDate] The end date (inclusive) of the transaction history to retrieve. If not provided, the default is the last transaction known to SnapTrade based on &#x60;trade_date&#x60;.\n         * @param {number} [offset] An integer that specifies the starting point of the paginated results. Default is 0.\n         * @param {number} [limit] An integer that specifies the maximum number of transactions to return. Default of 1000.\n         * @param {string} [type] Optional comma separated list of transaction types to filter by. SnapTrade does a best effort to categorize brokerage transaction types into a common set of values. Here are some of the most popular values:   - &#x60;BUY&#x60; - Asset bought.   - &#x60;SELL&#x60; - Asset sold.   - &#x60;DIVIDEND&#x60; - Dividend payout.   - &#x60;CONTRIBUTION&#x60; - Cash contribution.   - &#x60;WITHDRAWAL&#x60; - Cash withdrawal.   - &#x60;REI&#x60; - Dividend reinvestment.   - &#x60;STOCK_DIVIDEND&#x60; - A type of dividend where a company distributes shares instead of cash   - &#x60;INTEREST&#x60; - Interest deposited into the account.   - &#x60;FEE&#x60; - Fee withdrawn from the account.   - &#x60;OPTIONEXPIRATION&#x60; - Option expiration event.   - &#x60;OPTIONASSIGNMENT&#x60; - Option assignment event.   - &#x60;OPTIONEXERCISE&#x60; - Option exercise event.   - &#x60;TRANSFER&#x60; - Transfer of assets from one account to another\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAccountActivities: (accountId, userId, userSecret, startDate, endDate, offset, limit, type, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getAccountActivities', 'accountId', accountId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getAccountActivities', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getAccountActivities', 'userSecret', userSecret);\n            const localVarPath = `/accounts/{accountId}/activities`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (startDate !== undefined) {\n                localVarQueryParameter['startDate'] = (startDate instanceof Date) ?\n                    startDate.toISOString().substr(0, 10) :\n                    startDate;\n            }\n            if (endDate !== undefined) {\n                localVarQueryParameter['endDate'] = (endDate instanceof Date) ?\n                    endDate.toISOString().substr(0, 10) :\n                    endDate;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/activities',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * **Deprecated, please use the account-specific holdings endpoint instead.**  List all accounts for the user, plus balances, positions, and orders for each account.\n         * @summary List all accounts for the user, plus balances, positions, and orders for each account.\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} [brokerageAuthorizations] Optional. Comma separated list of authorization IDs (only use if filtering is needed on one or more authorizations).\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getAllUserHoldings: (userId, userSecret, brokerageAuthorizations, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getAllUserHoldings', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getAllUserHoldings', 'userSecret', userSecret);\n            const localVarPath = `/holdings`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (brokerageAuthorizations !== undefined) {\n                localVarQueryParameter['brokerage_authorizations'] = brokerageAuthorizations;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/holdings',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of balances for the account. Each element of the list has a distinct currency. Some brokerages like Questrade [allows holding multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account balances\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountBalance: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountBalance', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountBalance', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountBalance', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/balances`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/balances',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns account detail known to SnapTrade for the specified account.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary Get account detail\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountDetails: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountDetails', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountDetails', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountDetails', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns the detail of a single order using the external order ID provided in the request body.  This endpoint only works for single-leg orders at this time. Support for multi-leg orders will be added in the future.  This endpoint is always realtime and does not rely on cached data.  This endpoint only returns orders placed through SnapTrade. In other words, orders placed outside of the SnapTrade network are not returned by this endpoint.\n         * @summary Get account order detail\n         * @param {string} accountId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {AccountInformationGetUserAccountOrderDetailRequest} accountInformationGetUserAccountOrderDetailRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrderDetail: (accountId, userId, userSecret, accountInformationGetUserAccountOrderDetailRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrderDetail', 'accountId', accountId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrderDetail', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrderDetail', 'userSecret', userSecret);\n            // verify required parameter 'accountInformationGetUserAccountOrderDetailRequest' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrderDetail', 'accountInformationGetUserAccountOrderDetailRequest', accountInformationGetUserAccountOrderDetailRequest);\n            const localVarPath = `/accounts/{accountId}/orders/details`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: accountInformationGetUserAccountOrderDetailRequest,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/orders/details',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(accountInformationGetUserAccountOrderDetailRequest, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of recent orders in the specified account.  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account orders\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {'all' | 'open' | 'executed'} [state] defaults value is set to \\&quot;all\\&quot;\n         * @param {number} [days] Number of days in the past to fetch the most recent orders. Defaults to the last 30 days if no value is passed in.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrders: (userId, userSecret, accountId, state, days, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrders', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrders', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountOrders', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/orders`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (state !== undefined) {\n                localVarQueryParameter['state'] = state;\n            }\n            if (days !== undefined) {\n                localVarQueryParameter['days'] = days;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/orders',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of stock/ETF/crypto/mutual fund positions in the specified account. For option positions, please use the [options endpoint](/reference/Options/Options_listOptionHoldings).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account positions\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountPositions: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountPositions', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountPositions', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountPositions', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/positions`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/positions',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * A lightweight endpoint that returns a list of orders executed in the last 24 hours in the specified account. This endpoint is realtime and can be used to quickly check if account state has recently changed due to an execution, or check status of recently placed orders Differs from /orders in that it is realtime, and only checks the last 24 hours as opposed to the last 30 days By default only returns executed orders, but that can be changed by setting *only_executed* to false **Because of the cost of realtime requests, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary List account recent orders (last 24 hours only)\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {boolean} [onlyExecuted] Defaults to true. Indicates if request should fetch only executed orders. Set to false to retrieve non executed orders as well\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountRecentOrders: (userId, userSecret, accountId, onlyExecuted, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountRecentOrders', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountRecentOrders', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountRecentOrders', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/recentOrders`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (onlyExecuted !== undefined) {\n                localVarQueryParameter['only_executed'] = onlyExecuted;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/recentOrders',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of rate of return percents for a given account. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List account rate of returns\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountReturnRates: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountReturnRates', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountReturnRates', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountReturnRates', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/returnRates`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/returnRates',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of balances, positions, and recent orders for the specified account. The data returned is similar to the data returned over the more fine-grained [balances](/reference/Account%20Information/AccountInformation_getUserAccountBalance), [positions](/reference/Account%20Information/AccountInformation_getUserAccountPositions) and [orders](/reference/Account%20Information/AccountInformation_getUserAccountOrders) endpoints. __The finer-grained APIs are preferred. They are easier to work with, faster, and have better error handling than this coarse-grained API.__  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account holdings\n         * @param {string} accountId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserHoldings: (accountId, userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserHoldings', 'accountId', accountId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserHoldings', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserHoldings', 'userSecret', userSecret);\n            const localVarPath = `/accounts/{accountId}/holdings`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/holdings',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns all brokerage accounts across all connections known to SnapTrade for the authenticated user.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List accounts\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listUserAccounts: (userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('listUserAccounts', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('listUserAccounts', 'userSecret', userSecret);\n            const localVarPath = `/accounts`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Updates various properties of a specified account.\n         * @summary Update details of an investment account\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId The ID of the account to update.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUserAccount: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('updateUserAccount', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('updateUserAccount', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('updateUserAccount', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'PUT' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}',\n                httpMethod: 'PUT'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.AccountInformationApiAxiosParamCreator = AccountInformationApiAxiosParamCreator;\n/**\n * AccountInformationApi - functional programming interface\n * @export\n */\nconst AccountInformationApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.AccountInformationApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Returns all historical transactions for the specified account.  This endpoint is paginated with a default page size of 1000. The endpoint will return a maximum of 1000 transactions per request. See the query parameters for pagination options.  Transaction are returned in reverse chronological order, using the `trade_date` field.  The data returned here is always cached and refreshed once a day.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account activities\n         * @param {AccountInformationApiGetAccountActivitiesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAccountActivities(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getAccountActivities(requestParameters.accountId, requestParameters.userId, requestParameters.userSecret, requestParameters.startDate, requestParameters.endDate, requestParameters.offset, requestParameters.limit, requestParameters.type, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * **Deprecated, please use the account-specific holdings endpoint instead.**  List all accounts for the user, plus balances, positions, and orders for each account.\n         * @summary List all accounts for the user, plus balances, positions, and orders for each account.\n         * @param {AccountInformationApiGetAllUserHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getAllUserHoldings(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getAllUserHoldings(requestParameters.userId, requestParameters.userSecret, requestParameters.brokerageAuthorizations, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of balances for the account. Each element of the list has a distinct currency. Some brokerages like Questrade [allows holding multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account balances\n         * @param {AccountInformationApiGetUserAccountBalanceRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountBalance(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountBalance(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns account detail known to SnapTrade for the specified account.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary Get account detail\n         * @param {AccountInformationApiGetUserAccountDetailsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountDetails(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountDetails(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns the detail of a single order using the external order ID provided in the request body.  This endpoint only works for single-leg orders at this time. Support for multi-leg orders will be added in the future.  This endpoint is always realtime and does not rely on cached data.  This endpoint only returns orders placed through SnapTrade. In other words, orders placed outside of the SnapTrade network are not returned by this endpoint.\n         * @summary Get account order detail\n         * @param {AccountInformationApiGetUserAccountOrderDetailRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrderDetail(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const accountInformationGetUserAccountOrderDetailRequest = {\n                    brokerage_order_id: requestParameters.brokerage_order_id\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountOrderDetail(requestParameters.accountId, requestParameters.userId, requestParameters.userSecret, accountInformationGetUserAccountOrderDetailRequest, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of recent orders in the specified account.  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account orders\n         * @param {AccountInformationApiGetUserAccountOrdersRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrders(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountOrders(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, requestParameters.state, requestParameters.days, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of stock/ETF/crypto/mutual fund positions in the specified account. For option positions, please use the [options endpoint](/reference/Options/Options_listOptionHoldings).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account positions\n         * @param {AccountInformationApiGetUserAccountPositionsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountPositions(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountPositions(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * A lightweight endpoint that returns a list of orders executed in the last 24 hours in the specified account. This endpoint is realtime and can be used to quickly check if account state has recently changed due to an execution, or check status of recently placed orders Differs from /orders in that it is realtime, and only checks the last 24 hours as opposed to the last 30 days By default only returns executed orders, but that can be changed by setting *only_executed* to false **Because of the cost of realtime requests, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary List account recent orders (last 24 hours only)\n         * @param {AccountInformationApiGetUserAccountRecentOrdersRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountRecentOrders(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountRecentOrders(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, requestParameters.onlyExecuted, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of rate of return percents for a given account. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List account rate of returns\n         * @param {AccountInformationApiGetUserAccountReturnRatesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountReturnRates(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountReturnRates(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of balances, positions, and recent orders for the specified account. The data returned is similar to the data returned over the more fine-grained [balances](/reference/Account%20Information/AccountInformation_getUserAccountBalance), [positions](/reference/Account%20Information/AccountInformation_getUserAccountPositions) and [orders](/reference/Account%20Information/AccountInformation_getUserAccountOrders) endpoints. __The finer-grained APIs are preferred. They are easier to work with, faster, and have better error handling than this coarse-grained API.__  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account holdings\n         * @param {AccountInformationApiGetUserHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserHoldings(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserHoldings(requestParameters.accountId, requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns all brokerage accounts across all connections known to SnapTrade for the authenticated user.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List accounts\n         * @param {AccountInformationApiListUserAccountsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listUserAccounts(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listUserAccounts(requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Updates various properties of a specified account.\n         * @summary Update details of an investment account\n         * @param {AccountInformationApiUpdateUserAccountRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUserAccount(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.updateUserAccount(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.AccountInformationApiFp = AccountInformationApiFp;\n/**\n * AccountInformationApi - factory interface\n * @export\n */\nconst AccountInformationApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.AccountInformationApiFp)(configuration);\n    return {\n        /**\n         * Returns all historical transactions for the specified account.  This endpoint is paginated with a default page size of 1000. The endpoint will return a maximum of 1000 transactions per request. See the query parameters for pagination options.  Transaction are returned in reverse chronological order, using the `trade_date` field.  The data returned here is always cached and refreshed once a day.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account activities\n         * @param {AccountInformationApiGetAccountActivitiesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAccountActivities(requestParameters, options) {\n            return localVarFp.getAccountActivities(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * **Deprecated, please use the account-specific holdings endpoint instead.**  List all accounts for the user, plus balances, positions, and orders for each account.\n         * @summary List all accounts for the user, plus balances, positions, and orders for each account.\n         * @param {AccountInformationApiGetAllUserHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getAllUserHoldings(requestParameters, options) {\n            return localVarFp.getAllUserHoldings(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of balances for the account. Each element of the list has a distinct currency. Some brokerages like Questrade [allows holding multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account balances\n         * @param {AccountInformationApiGetUserAccountBalanceRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountBalance(requestParameters, options) {\n            return localVarFp.getUserAccountBalance(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns account detail known to SnapTrade for the specified account.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary Get account detail\n         * @param {AccountInformationApiGetUserAccountDetailsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountDetails(requestParameters, options) {\n            return localVarFp.getUserAccountDetails(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns the detail of a single order using the external order ID provided in the request body.  This endpoint only works for single-leg orders at this time. Support for multi-leg orders will be added in the future.  This endpoint is always realtime and does not rely on cached data.  This endpoint only returns orders placed through SnapTrade. In other words, orders placed outside of the SnapTrade network are not returned by this endpoint.\n         * @summary Get account order detail\n         * @param {AccountInformationApiGetUserAccountOrderDetailRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrderDetail(requestParameters, options) {\n            return localVarFp.getUserAccountOrderDetail(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of recent orders in the specified account.  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account orders\n         * @param {AccountInformationApiGetUserAccountOrdersRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountOrders(requestParameters, options) {\n            return localVarFp.getUserAccountOrders(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of stock/ETF/crypto/mutual fund positions in the specified account. For option positions, please use the [options endpoint](/reference/Options/Options_listOptionHoldings).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account positions\n         * @param {AccountInformationApiGetUserAccountPositionsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountPositions(requestParameters, options) {\n            return localVarFp.getUserAccountPositions(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * A lightweight endpoint that returns a list of orders executed in the last 24 hours in the specified account. This endpoint is realtime and can be used to quickly check if account state has recently changed due to an execution, or check status of recently placed orders Differs from /orders in that it is realtime, and only checks the last 24 hours as opposed to the last 30 days By default only returns executed orders, but that can be changed by setting *only_executed* to false **Because of the cost of realtime requests, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary List account recent orders (last 24 hours only)\n         * @param {AccountInformationApiGetUserAccountRecentOrdersRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountRecentOrders(requestParameters, options) {\n            return localVarFp.getUserAccountRecentOrders(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of rate of return percents for a given account. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List account rate of returns\n         * @param {AccountInformationApiGetUserAccountReturnRatesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountReturnRates(requestParameters, options) {\n            return localVarFp.getUserAccountReturnRates(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of balances, positions, and recent orders for the specified account. The data returned is similar to the data returned over the more fine-grained [balances](/reference/Account%20Information/AccountInformation_getUserAccountBalance), [positions](/reference/Account%20Information/AccountInformation_getUserAccountPositions) and [orders](/reference/Account%20Information/AccountInformation_getUserAccountOrders) endpoints. __The finer-grained APIs are preferred. They are easier to work with, faster, and have better error handling than this coarse-grained API.__  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n         * @summary List account holdings\n         * @param {AccountInformationApiGetUserHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserHoldings(requestParameters, options) {\n            return localVarFp.getUserHoldings(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns all brokerage accounts across all connections known to SnapTrade for the authenticated user.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List accounts\n         * @param {AccountInformationApiListUserAccountsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listUserAccounts(requestParameters, options) {\n            return localVarFp.listUserAccounts(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Updates various properties of a specified account.\n         * @summary Update details of an investment account\n         * @param {AccountInformationApiUpdateUserAccountRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUserAccount(requestParameters, options) {\n            return localVarFp.updateUserAccount(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.AccountInformationApiFactory = AccountInformationApiFactory;\n/**\n * AccountInformationApiGenerated - object-oriented interface\n * @export\n * @class AccountInformationApiGenerated\n * @extends {BaseAPI}\n */\nclass AccountInformationApiGenerated extends base_1.BaseAPI {\n    /**\n     * Returns all historical transactions for the specified account.  This endpoint is paginated with a default page size of 1000. The endpoint will return a maximum of 1000 transactions per request. See the query parameters for pagination options.  Transaction are returned in reverse chronological order, using the `trade_date` field.  The data returned here is always cached and refreshed once a day.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary List account activities\n     * @param {AccountInformationApiGetAccountActivitiesRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getAccountActivities(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getAccountActivities(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * **Deprecated, please use the account-specific holdings endpoint instead.**  List all accounts for the user, plus balances, positions, and orders for each account.\n     * @summary List all accounts for the user, plus balances, positions, and orders for each account.\n     * @param {AccountInformationApiGetAllUserHoldingsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getAllUserHoldings(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getAllUserHoldings(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of balances for the account. Each element of the list has a distinct currency. Some brokerages like Questrade [allows holding multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary List account balances\n     * @param {AccountInformationApiGetUserAccountBalanceRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountBalance(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountBalance(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns account detail known to SnapTrade for the specified account.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary Get account detail\n     * @param {AccountInformationApiGetUserAccountDetailsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountDetails(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountDetails(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns the detail of a single order using the external order ID provided in the request body.  This endpoint only works for single-leg orders at this time. Support for multi-leg orders will be added in the future.  This endpoint is always realtime and does not rely on cached data.  This endpoint only returns orders placed through SnapTrade. In other words, orders placed outside of the SnapTrade network are not returned by this endpoint.\n     * @summary Get account order detail\n     * @param {AccountInformationApiGetUserAccountOrderDetailRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountOrderDetail(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountOrderDetail(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of recent orders in the specified account.  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary List account orders\n     * @param {AccountInformationApiGetUserAccountOrdersRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountOrders(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountOrders(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of stock/ETF/crypto/mutual fund positions in the specified account. For option positions, please use the [options endpoint](/reference/Options/Options_listOptionHoldings).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary List account positions\n     * @param {AccountInformationApiGetUserAccountPositionsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountPositions(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountPositions(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * A lightweight endpoint that returns a list of orders executed in the last 24 hours in the specified account. This endpoint is realtime and can be used to quickly check if account state has recently changed due to an execution, or check status of recently placed orders Differs from /orders in that it is realtime, and only checks the last 24 hours as opposed to the last 30 days By default only returns executed orders, but that can be changed by setting *only_executed* to false **Because of the cost of realtime requests, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n     * @summary List account recent orders (last 24 hours only)\n     * @param {AccountInformationApiGetUserAccountRecentOrdersRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountRecentOrders(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountRecentOrders(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of rate of return percents for a given account. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n     * @summary List account rate of returns\n     * @param {AccountInformationApiGetUserAccountReturnRatesRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserAccountReturnRates(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserAccountReturnRates(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of balances, positions, and recent orders for the specified account. The data returned is similar to the data returned over the more fine-grained [balances](/reference/Account%20Information/AccountInformation_getUserAccountBalance), [positions](/reference/Account%20Information/AccountInformation_getUserAccountPositions) and [orders](/reference/Account%20Information/AccountInformation_getUserAccountOrders) endpoints. __The finer-grained APIs are preferred. They are easier to work with, faster, and have better error handling than this coarse-grained API.__  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.  If the connection has become disabled, it can no longer access the latest data from the brokerage, but will continue to return the last available cached state. Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.\n     * @summary List account holdings\n     * @param {AccountInformationApiGetUserHoldingsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    getUserHoldings(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).getUserHoldings(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns all brokerage accounts across all connections known to SnapTrade for the authenticated user.  The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n     * @summary List accounts\n     * @param {AccountInformationApiListUserAccountsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    listUserAccounts(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).listUserAccounts(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Updates various properties of a specified account.\n     * @summary Update details of an investment account\n     * @param {AccountInformationApiUpdateUserAccountRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountInformationApiGenerated\n     */\n    updateUserAccount(requestParameters, options) {\n        return (0, exports.AccountInformationApiFp)(this.configuration).updateUserAccount(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.AccountInformationApiGenerated = AccountInformationApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountInformationApi = void 0;\nconst account_information_api_generated_1 = require(\"./account-information-api-generated\");\n__exportStar(require(\"./account-information-api-generated\"), exports);\nclass AccountInformationApi extends account_information_api_generated_1.AccountInformationApiGenerated {\n}\nexports.AccountInformationApi = AccountInformationApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiStatusApiGenerated = exports.ApiStatusApiFactory = exports.ApiStatusApiFp = exports.ApiStatusApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * ApiStatusApi - axios parameter creator\n * @export\n */\nconst ApiStatusApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Check whether the API is operational and verify timestamps.\n         * @summary Get API Status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        check: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.ApiStatusApiAxiosParamCreator = ApiStatusApiAxiosParamCreator;\n/**\n * ApiStatusApi - functional programming interface\n * @export\n */\nconst ApiStatusApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.ApiStatusApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Check whether the API is operational and verify timestamps.\n         * @summary Get API Status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        check(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.check(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.ApiStatusApiFp = ApiStatusApiFp;\n/**\n * ApiStatusApi - factory interface\n * @export\n */\nconst ApiStatusApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.ApiStatusApiFp)(configuration);\n    return {\n        /**\n         * Check whether the API is operational and verify timestamps.\n         * @summary Get API Status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        check(options) {\n            return localVarFp.check(options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.ApiStatusApiFactory = ApiStatusApiFactory;\n/**\n * ApiStatusApiGenerated - object-oriented interface\n * @export\n * @class ApiStatusApiGenerated\n * @extends {BaseAPI}\n */\nclass ApiStatusApiGenerated extends base_1.BaseAPI {\n    /**\n     * Check whether the API is operational and verify timestamps.\n     * @summary Get API Status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ApiStatusApiGenerated\n     */\n    check(options) {\n        return (0, exports.ApiStatusApiFp)(this.configuration).check(options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.ApiStatusApiGenerated = ApiStatusApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiStatusApi = void 0;\nconst api_status_api_generated_1 = require(\"./api-status-api-generated\");\n__exportStar(require(\"./api-status-api-generated\"), exports);\nclass ApiStatusApi extends api_status_api_generated_1.ApiStatusApiGenerated {\n}\nexports.ApiStatusApi = ApiStatusApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationApiGenerated = exports.AuthenticationApiFactory = exports.AuthenticationApiFp = exports.AuthenticationApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * AuthenticationApi - axios parameter creator\n * @export\n */\nconst AuthenticationApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Deletes a registered user and all associated data. This action is irreversible. This API is asynchronous and will return a 200 status code if the request is accepted. The user and all associated data will be queued for deletion. Once deleted, a `USER_DELETED` webhook will be sent.\n         * @summary Delete user\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSnapTradeUser: (userId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('deleteSnapTradeUser', 'userId', userId);\n            const localVarPath = `/snapTrade/deleteUser`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/deleteUser',\n                httpMethod: 'DELETE'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all registered user IDs. Please note that the response is not currently paginated.\n         * @summary List all users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSnapTradeUsers: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/snapTrade/listUsers`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/listUsers',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Authenticates a SnapTrade user and returns the Connection Portal URL used for connecting brokerage accounts. Please check [this guide](/docs/implement-connection-portal) for how to integrate the Connection Portal into your app.  Please note that the returned URL expires in 5 minutes.\n         * @summary Generate Connection Portal URL\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {SnapTradeLoginUserRequestBody} [snapTradeLoginUserRequestBody]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        loginSnapTradeUser: (userId, userSecret, snapTradeLoginUserRequestBody, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('loginSnapTradeUser', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('loginSnapTradeUser', 'userSecret', userSecret);\n            const localVarPath = `/snapTrade/login`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: snapTradeLoginUserRequestBody,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/login',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(snapTradeLoginUserRequestBody, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Registers a new SnapTrade user under your Client ID. A user secret will be automatically generated for you and must be properly stored in your system. Most SnapTrade operations require a user ID and user secret to be passed in as parameters.\n         * @summary Register user\n         * @param {SnapTradeRegisterUserRequestBody} snapTradeRegisterUserRequestBody\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        registerSnapTradeUser: (snapTradeRegisterUserRequestBody, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'snapTradeRegisterUserRequestBody' is not null or undefined\n            (0, common_1.assertParamExists)('registerSnapTradeUser', 'snapTradeRegisterUserRequestBody', snapTradeRegisterUserRequestBody);\n            const localVarPath = `/snapTrade/registerUser`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: snapTradeRegisterUserRequestBody,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/registerUser',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(snapTradeRegisterUserRequestBody, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Rotates the secret for a SnapTrade user. You might use this if `userSecret` is compromised. Please note that if you call this endpoint and fail to save the new secret, you\\'ll no longer be able to access any data for this user, and your only option will be to delete and recreate the user, then ask them to reconnect.\n         * @summary Rotate user secret\n         * @param {UserIDandSecret} userIDandSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetSnapTradeUserSecret: (userIDandSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userIDandSecret' is not null or undefined\n            (0, common_1.assertParamExists)('resetSnapTradeUserSecret', 'userIDandSecret', userIDandSecret);\n            const localVarPath = `/snapTrade/resetUserSecret`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: userIDandSecret,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/resetUserSecret',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(userIDandSecret, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.AuthenticationApiAxiosParamCreator = AuthenticationApiAxiosParamCreator;\n/**\n * AuthenticationApi - functional programming interface\n * @export\n */\nconst AuthenticationApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.AuthenticationApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Deletes a registered user and all associated data. This action is irreversible. This API is asynchronous and will return a 200 status code if the request is accepted. The user and all associated data will be queued for deletion. Once deleted, a `USER_DELETED` webhook will be sent.\n         * @summary Delete user\n         * @param {AuthenticationApiDeleteSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSnapTradeUser(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.deleteSnapTradeUser(requestParameters.userId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all registered user IDs. Please note that the response is not currently paginated.\n         * @summary List all users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSnapTradeUsers(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listSnapTradeUsers(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Authenticates a SnapTrade user and returns the Connection Portal URL used for connecting brokerage accounts. Please check [this guide](/docs/implement-connection-portal) for how to integrate the Connection Portal into your app.  Please note that the returned URL expires in 5 minutes.\n         * @summary Generate Connection Portal URL\n         * @param {AuthenticationApiLoginSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        loginSnapTradeUser(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const snapTradeLoginUserRequestBody = {\n                    broker: requestParameters.broker,\n                    immediateRedirect: requestParameters.immediateRedirect,\n                    customRedirect: requestParameters.customRedirect,\n                    reconnect: requestParameters.reconnect,\n                    connectionType: requestParameters.connectionType,\n                    showCloseButton: requestParameters.showCloseButton,\n                    connectionPortalVersion: requestParameters.connectionPortalVersion\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.loginSnapTradeUser(requestParameters.userId, requestParameters.userSecret, snapTradeLoginUserRequestBody, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Registers a new SnapTrade user under your Client ID. A user secret will be automatically generated for you and must be properly stored in your system. Most SnapTrade operations require a user ID and user secret to be passed in as parameters.\n         * @summary Register user\n         * @param {AuthenticationApiRegisterSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        registerSnapTradeUser(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const snapTradeRegisterUserRequestBody = {\n                    userId: requestParameters.userId\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.registerSnapTradeUser(snapTradeRegisterUserRequestBody, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Rotates the secret for a SnapTrade user. You might use this if `userSecret` is compromised. Please note that if you call this endpoint and fail to save the new secret, you\\'ll no longer be able to access any data for this user, and your only option will be to delete and recreate the user, then ask them to reconnect.\n         * @summary Rotate user secret\n         * @param {AuthenticationApiResetSnapTradeUserSecretRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetSnapTradeUserSecret(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const userIDandSecret = {\n                    userId: requestParameters.userId,\n                    userSecret: requestParameters.userSecret\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.resetSnapTradeUserSecret(userIDandSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.AuthenticationApiFp = AuthenticationApiFp;\n/**\n * AuthenticationApi - factory interface\n * @export\n */\nconst AuthenticationApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.AuthenticationApiFp)(configuration);\n    return {\n        /**\n         * Deletes a registered user and all associated data. This action is irreversible. This API is asynchronous and will return a 200 status code if the request is accepted. The user and all associated data will be queued for deletion. Once deleted, a `USER_DELETED` webhook will be sent.\n         * @summary Delete user\n         * @param {AuthenticationApiDeleteSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSnapTradeUser(requestParameters, options) {\n            return localVarFp.deleteSnapTradeUser(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all registered user IDs. Please note that the response is not currently paginated.\n         * @summary List all users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSnapTradeUsers(options) {\n            return localVarFp.listSnapTradeUsers(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Authenticates a SnapTrade user and returns the Connection Portal URL used for connecting brokerage accounts. Please check [this guide](/docs/implement-connection-portal) for how to integrate the Connection Portal into your app.  Please note that the returned URL expires in 5 minutes.\n         * @summary Generate Connection Portal URL\n         * @param {AuthenticationApiLoginSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        loginSnapTradeUser(requestParameters, options) {\n            return localVarFp.loginSnapTradeUser(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Registers a new SnapTrade user under your Client ID. A user secret will be automatically generated for you and must be properly stored in your system. Most SnapTrade operations require a user ID and user secret to be passed in as parameters.\n         * @summary Register user\n         * @param {AuthenticationApiRegisterSnapTradeUserRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        registerSnapTradeUser(requestParameters, options) {\n            return localVarFp.registerSnapTradeUser(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Rotates the secret for a SnapTrade user. You might use this if `userSecret` is compromised. Please note that if you call this endpoint and fail to save the new secret, you\\'ll no longer be able to access any data for this user, and your only option will be to delete and recreate the user, then ask them to reconnect.\n         * @summary Rotate user secret\n         * @param {AuthenticationApiResetSnapTradeUserSecretRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetSnapTradeUserSecret(requestParameters, options) {\n            return localVarFp.resetSnapTradeUserSecret(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.AuthenticationApiFactory = AuthenticationApiFactory;\n/**\n * AuthenticationApiGenerated - object-oriented interface\n * @export\n * @class AuthenticationApiGenerated\n * @extends {BaseAPI}\n */\nclass AuthenticationApiGenerated extends base_1.BaseAPI {\n    /**\n     * Deletes a registered user and all associated data. This action is irreversible. This API is asynchronous and will return a 200 status code if the request is accepted. The user and all associated data will be queued for deletion. Once deleted, a `USER_DELETED` webhook will be sent.\n     * @summary Delete user\n     * @param {AuthenticationApiDeleteSnapTradeUserRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiGenerated\n     */\n    deleteSnapTradeUser(requestParameters, options) {\n        return (0, exports.AuthenticationApiFp)(this.configuration).deleteSnapTradeUser(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all registered user IDs. Please note that the response is not currently paginated.\n     * @summary List all users\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiGenerated\n     */\n    listSnapTradeUsers(options) {\n        return (0, exports.AuthenticationApiFp)(this.configuration).listSnapTradeUsers(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Authenticates a SnapTrade user and returns the Connection Portal URL used for connecting brokerage accounts. Please check [this guide](/docs/implement-connection-portal) for how to integrate the Connection Portal into your app.  Please note that the returned URL expires in 5 minutes.\n     * @summary Generate Connection Portal URL\n     * @param {AuthenticationApiLoginSnapTradeUserRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiGenerated\n     */\n    loginSnapTradeUser(requestParameters, options) {\n        return (0, exports.AuthenticationApiFp)(this.configuration).loginSnapTradeUser(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Registers a new SnapTrade user under your Client ID. A user secret will be automatically generated for you and must be properly stored in your system. Most SnapTrade operations require a user ID and user secret to be passed in as parameters.\n     * @summary Register user\n     * @param {AuthenticationApiRegisterSnapTradeUserRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiGenerated\n     */\n    registerSnapTradeUser(requestParameters, options) {\n        return (0, exports.AuthenticationApiFp)(this.configuration).registerSnapTradeUser(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Rotates the secret for a SnapTrade user. You might use this if `userSecret` is compromised. Please note that if you call this endpoint and fail to save the new secret, you\\'ll no longer be able to access any data for this user, and your only option will be to delete and recreate the user, then ask them to reconnect.\n     * @summary Rotate user secret\n     * @param {AuthenticationApiResetSnapTradeUserSecretRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiGenerated\n     */\n    resetSnapTradeUserSecret(requestParameters, options) {\n        return (0, exports.AuthenticationApiFp)(this.configuration).resetSnapTradeUserSecret(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.AuthenticationApiGenerated = AuthenticationApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationApi = void 0;\nconst authentication_api_generated_1 = require(\"./authentication-api-generated\");\n__exportStar(require(\"./authentication-api-generated\"), exports);\nclass AuthenticationApi extends authentication_api_generated_1.AuthenticationApiGenerated {\n}\nexports.AuthenticationApi = AuthenticationApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionsApiGenerated = exports.ConnectionsApiFactory = exports.ConnectionsApiFp = exports.ConnectionsApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * ConnectionsApi - axios parameter creator\n * @export\n */\nconst ConnectionsApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns a single connection for the specified ID.\n         * @summary Get connection detail\n         * @param {string} authorizationId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detailBrokerageAuthorization: (authorizationId, userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'authorizationId' is not null or undefined\n            (0, common_1.assertParamExists)('detailBrokerageAuthorization', 'authorizationId', authorizationId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('detailBrokerageAuthorization', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('detailBrokerageAuthorization', 'userSecret', userSecret);\n            const localVarPath = `/authorizations/{authorizationId}`\n                .replace(`{${\"authorizationId\"}}`, encodeURIComponent(String(authorizationId !== undefined ? authorizationId : `-authorizationId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations/{authorizationId}',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Manually force the specified connection to become disabled. This should only be used for testing a reconnect flow, and never used on production connections. Will trigger a disconnect as if it happened naturally, and send a [`CONNECTION_BROKEN` webhook](/docs/webhooks#webhooks-connection_broken) for the connection.  This endpoint is available on test keys. If you would like it enabled on production keys as well, please contact support as it is disabled by default.\n         * @summary Force disable connection\n         * @param {string} authorizationId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        disableBrokerageAuthorization: (authorizationId, userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'authorizationId' is not null or undefined\n            (0, common_1.assertParamExists)('disableBrokerageAuthorization', 'authorizationId', authorizationId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('disableBrokerageAuthorization', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('disableBrokerageAuthorization', 'userSecret', userSecret);\n            const localVarPath = `/authorizations/{authorizationId}/disable`\n                .replace(`{${\"authorizationId\"}}`, encodeURIComponent(String(authorizationId !== undefined ? authorizationId : `-authorizationId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations/{authorizationId}/disable',\n                httpMethod: 'POST'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all connections for the specified user. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.  A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.  SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.\n         * @summary List all connections\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listBrokerageAuthorizations: (userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('listBrokerageAuthorizations', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('listBrokerageAuthorizations', 'userSecret', userSecret);\n            const localVarPath = `/authorizations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Trigger a holdings update for all accounts under this connection. Updates will be queued asynchronously. [`ACCOUNT_HOLDINGS_UPDATED` webhook](/docs/webhooks#webhooks-account_holdings_updated) will be sent once the sync completes for each account under the connection. This endpoint will also trigger a transaction sync for the past day if one has not yet occurred.  **Please contact support before use. Because of the cost of refreshing a connection, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary Refresh holdings for a connection\n         * @param {string} authorizationId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        refreshBrokerageAuthorization: (authorizationId, userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'authorizationId' is not null or undefined\n            (0, common_1.assertParamExists)('refreshBrokerageAuthorization', 'authorizationId', authorizationId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('refreshBrokerageAuthorization', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('refreshBrokerageAuthorization', 'userSecret', userSecret);\n            const localVarPath = `/authorizations/{authorizationId}/refresh`\n                .replace(`{${\"authorizationId\"}}`, encodeURIComponent(String(authorizationId !== undefined ? authorizationId : `-authorizationId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations/{authorizationId}/refresh',\n                httpMethod: 'POST'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Deletes the connection specified by the ID. This will also delete all accounts and holdings associated with the connection. This action is irreversible. This endpoint is synchronous, a 204 response indicates that the connection has been successfully deleted.\n         * @summary Delete connection\n         * @param {string} authorizationId\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeBrokerageAuthorization: (authorizationId, userId, userSecret, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'authorizationId' is not null or undefined\n            (0, common_1.assertParamExists)('removeBrokerageAuthorization', 'authorizationId', authorizationId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('removeBrokerageAuthorization', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('removeBrokerageAuthorization', 'userSecret', userSecret);\n            const localVarPath = `/authorizations/{authorizationId}`\n                .replace(`{${\"authorizationId\"}}`, encodeURIComponent(String(authorizationId !== undefined ? authorizationId : `-authorizationId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations/{authorizationId}',\n                httpMethod: 'DELETE'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of rate of return percents for a given connection. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List connection rate of returns\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} authorizationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        returnRates: (userId, userSecret, authorizationId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('returnRates', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('returnRates', 'userSecret', userSecret);\n            // verify required parameter 'authorizationId' is not null or undefined\n            (0, common_1.assertParamExists)('returnRates', 'authorizationId', authorizationId);\n            const localVarPath = `/authorizations/{authorizationId}/returnRates`\n                .replace(`{${\"authorizationId\"}}`, encodeURIComponent(String(authorizationId !== undefined ? authorizationId : `-authorizationId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/authorizations/{authorizationId}/returnRates',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of session events associated with a user.\n         * @summary Get all session events for a user\n         * @param {string} partnerClientId\n         * @param {string} [userId] Optional comma separated list of user IDs used to filter the request on specific users\n         * @param {string} [sessionId] Optional comma separated list of session IDs used to filter the request on specific users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionEvents: (partnerClientId, userId, sessionId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'partnerClientId' is not null or undefined\n            (0, common_1.assertParamExists)('sessionEvents', 'partnerClientId', partnerClientId);\n            const localVarPath = `/sessionEvents`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (partnerClientId !== undefined) {\n                localVarQueryParameter['PartnerClientId'] = partnerClientId;\n            }\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (sessionId !== undefined) {\n                localVarQueryParameter['sessionId'] = sessionId;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/sessionEvents',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.ConnectionsApiAxiosParamCreator = ConnectionsApiAxiosParamCreator;\n/**\n * ConnectionsApi - functional programming interface\n * @export\n */\nconst ConnectionsApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.ConnectionsApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Returns a single connection for the specified ID.\n         * @summary Get connection detail\n         * @param {ConnectionsApiDetailBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detailBrokerageAuthorization(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.detailBrokerageAuthorization(requestParameters.authorizationId, requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Manually force the specified connection to become disabled. This should only be used for testing a reconnect flow, and never used on production connections. Will trigger a disconnect as if it happened naturally, and send a [`CONNECTION_BROKEN` webhook](/docs/webhooks#webhooks-connection_broken) for the connection.  This endpoint is available on test keys. If you would like it enabled on production keys as well, please contact support as it is disabled by default.\n         * @summary Force disable connection\n         * @param {ConnectionsApiDisableBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        disableBrokerageAuthorization(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.disableBrokerageAuthorization(requestParameters.authorizationId, requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all connections for the specified user. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.  A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.  SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.\n         * @summary List all connections\n         * @param {ConnectionsApiListBrokerageAuthorizationsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listBrokerageAuthorizations(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listBrokerageAuthorizations(requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Trigger a holdings update for all accounts under this connection. Updates will be queued asynchronously. [`ACCOUNT_HOLDINGS_UPDATED` webhook](/docs/webhooks#webhooks-account_holdings_updated) will be sent once the sync completes for each account under the connection. This endpoint will also trigger a transaction sync for the past day if one has not yet occurred.  **Please contact support before use. Because of the cost of refreshing a connection, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary Refresh holdings for a connection\n         * @param {ConnectionsApiRefreshBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        refreshBrokerageAuthorization(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.refreshBrokerageAuthorization(requestParameters.authorizationId, requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Deletes the connection specified by the ID. This will also delete all accounts and holdings associated with the connection. This action is irreversible. This endpoint is synchronous, a 204 response indicates that the connection has been successfully deleted.\n         * @summary Delete connection\n         * @param {ConnectionsApiRemoveBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeBrokerageAuthorization(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.removeBrokerageAuthorization(requestParameters.authorizationId, requestParameters.userId, requestParameters.userSecret, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of rate of return percents for a given connection. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List connection rate of returns\n         * @param {ConnectionsApiReturnRatesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        returnRates(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.returnRates(requestParameters.userId, requestParameters.userSecret, requestParameters.authorizationId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of session events associated with a user.\n         * @summary Get all session events for a user\n         * @param {ConnectionsApiSessionEventsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionEvents(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.sessionEvents(requestParameters.partnerClientId, requestParameters.userId, requestParameters.sessionId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.ConnectionsApiFp = ConnectionsApiFp;\n/**\n * ConnectionsApi - factory interface\n * @export\n */\nconst ConnectionsApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.ConnectionsApiFp)(configuration);\n    return {\n        /**\n         * Returns a single connection for the specified ID.\n         * @summary Get connection detail\n         * @param {ConnectionsApiDetailBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detailBrokerageAuthorization(requestParameters, options) {\n            return localVarFp.detailBrokerageAuthorization(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Manually force the specified connection to become disabled. This should only be used for testing a reconnect flow, and never used on production connections. Will trigger a disconnect as if it happened naturally, and send a [`CONNECTION_BROKEN` webhook](/docs/webhooks#webhooks-connection_broken) for the connection.  This endpoint is available on test keys. If you would like it enabled on production keys as well, please contact support as it is disabled by default.\n         * @summary Force disable connection\n         * @param {ConnectionsApiDisableBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        disableBrokerageAuthorization(requestParameters, options) {\n            return localVarFp.disableBrokerageAuthorization(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all connections for the specified user. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.  A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.  SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.\n         * @summary List all connections\n         * @param {ConnectionsApiListBrokerageAuthorizationsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listBrokerageAuthorizations(requestParameters, options) {\n            return localVarFp.listBrokerageAuthorizations(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Trigger a holdings update for all accounts under this connection. Updates will be queued asynchronously. [`ACCOUNT_HOLDINGS_UPDATED` webhook](/docs/webhooks#webhooks-account_holdings_updated) will be sent once the sync completes for each account under the connection. This endpoint will also trigger a transaction sync for the past day if one has not yet occurred.  **Please contact support before use. Because of the cost of refreshing a connection, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n         * @summary Refresh holdings for a connection\n         * @param {ConnectionsApiRefreshBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        refreshBrokerageAuthorization(requestParameters, options) {\n            return localVarFp.refreshBrokerageAuthorization(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Deletes the connection specified by the ID. This will also delete all accounts and holdings associated with the connection. This action is irreversible. This endpoint is synchronous, a 204 response indicates that the connection has been successfully deleted.\n         * @summary Delete connection\n         * @param {ConnectionsApiRemoveBrokerageAuthorizationRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeBrokerageAuthorization(requestParameters, options) {\n            return localVarFp.removeBrokerageAuthorization(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of rate of return percents for a given connection. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n         * @summary List connection rate of returns\n         * @param {ConnectionsApiReturnRatesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        returnRates(requestParameters, options) {\n            return localVarFp.returnRates(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of session events associated with a user.\n         * @summary Get all session events for a user\n         * @param {ConnectionsApiSessionEventsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionEvents(requestParameters, options) {\n            return localVarFp.sessionEvents(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.ConnectionsApiFactory = ConnectionsApiFactory;\n/**\n * ConnectionsApiGenerated - object-oriented interface\n * @export\n * @class ConnectionsApiGenerated\n * @extends {BaseAPI}\n */\nclass ConnectionsApiGenerated extends base_1.BaseAPI {\n    /**\n     * Returns a single connection for the specified ID.\n     * @summary Get connection detail\n     * @param {ConnectionsApiDetailBrokerageAuthorizationRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    detailBrokerageAuthorization(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).detailBrokerageAuthorization(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Manually force the specified connection to become disabled. This should only be used for testing a reconnect flow, and never used on production connections. Will trigger a disconnect as if it happened naturally, and send a [`CONNECTION_BROKEN` webhook](/docs/webhooks#webhooks-connection_broken) for the connection.  This endpoint is available on test keys. If you would like it enabled on production keys as well, please contact support as it is disabled by default.\n     * @summary Force disable connection\n     * @param {ConnectionsApiDisableBrokerageAuthorizationRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    disableBrokerageAuthorization(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).disableBrokerageAuthorization(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all connections for the specified user. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.  A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.  SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.\n     * @summary List all connections\n     * @param {ConnectionsApiListBrokerageAuthorizationsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    listBrokerageAuthorizations(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).listBrokerageAuthorizations(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Trigger a holdings update for all accounts under this connection. Updates will be queued asynchronously. [`ACCOUNT_HOLDINGS_UPDATED` webhook](/docs/webhooks#webhooks-account_holdings_updated) will be sent once the sync completes for each account under the connection. This endpoint will also trigger a transaction sync for the past day if one has not yet occurred.  **Please contact support before use. Because of the cost of refreshing a connection, each call to this endpoint incurs an additional charge. You can find the exact cost for your API key on the [Customer Dashboard billing page](https://dashboard.snaptrade.com/settings/billing)**\n     * @summary Refresh holdings for a connection\n     * @param {ConnectionsApiRefreshBrokerageAuthorizationRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    refreshBrokerageAuthorization(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).refreshBrokerageAuthorization(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Deletes the connection specified by the ID. This will also delete all accounts and holdings associated with the connection. This action is irreversible. This endpoint is synchronous, a 204 response indicates that the connection has been successfully deleted.\n     * @summary Delete connection\n     * @param {ConnectionsApiRemoveBrokerageAuthorizationRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    removeBrokerageAuthorization(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).removeBrokerageAuthorization(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of rate of return percents for a given connection. Will include timeframes available from the brokerage, for example \\\"ALL\\\", \\\"1Y\\\", \\\"6M\\\", \\\"3M\\\", \\\"1M\\\"\n     * @summary List connection rate of returns\n     * @param {ConnectionsApiReturnRatesRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    returnRates(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).returnRates(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of session events associated with a user.\n     * @summary Get all session events for a user\n     * @param {ConnectionsApiSessionEventsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ConnectionsApiGenerated\n     */\n    sessionEvents(requestParameters, options) {\n        return (0, exports.ConnectionsApiFp)(this.configuration).sessionEvents(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.ConnectionsApiGenerated = ConnectionsApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionsApi = void 0;\nconst connections_api_generated_1 = require(\"./connections-api-generated\");\n__exportStar(require(\"./connections-api-generated\"), exports);\nclass ConnectionsApi extends connections_api_generated_1.ConnectionsApiGenerated {\n}\nexports.ConnectionsApi = ConnectionsApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsApiGenerated = exports.OptionsApiFactory = exports.OptionsApiFp = exports.OptionsApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * OptionsApi - axios parameter creator\n * @export\n */\nconst OptionsApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns the option chain for the specified symbol in the specified account.\n         * @summary Get the options chain for a symbol\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId The ID of the account to get the options chain from.\n         * @param {string} symbol Universal symbol ID if symbol\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOptionsChain: (userId, userSecret, accountId, symbol, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getOptionsChain', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getOptionsChain', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getOptionsChain', 'accountId', accountId);\n            // verify required parameter 'symbol' is not null or undefined\n            (0, common_1.assertParamExists)('getOptionsChain', 'symbol', symbol);\n            const localVarPath = `/accounts/{accountId}/optionsChain`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (symbol !== undefined) {\n                localVarQueryParameter['symbol'] = symbol;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/optionsChain',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of option positions in the specified account. For stock/ETF/crypto/mutual fund positions, please use the [positions endpoint](/reference/Account%20Information/AccountInformation_getUserAccountPositions).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List account option positions\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOptionHoldings: (userId, userSecret, accountId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('listOptionHoldings', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('listOptionHoldings', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('listOptionHoldings', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/options`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/options',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.OptionsApiAxiosParamCreator = OptionsApiAxiosParamCreator;\n/**\n * OptionsApi - functional programming interface\n * @export\n */\nconst OptionsApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.OptionsApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Returns the option chain for the specified symbol in the specified account.\n         * @summary Get the options chain for a symbol\n         * @param {OptionsApiGetOptionsChainRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOptionsChain(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getOptionsChain(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, requestParameters.symbol, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of option positions in the specified account. For stock/ETF/crypto/mutual fund positions, please use the [positions endpoint](/reference/Account%20Information/AccountInformation_getUserAccountPositions).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List account option positions\n         * @param {OptionsApiListOptionHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOptionHoldings(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listOptionHoldings(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.OptionsApiFp = OptionsApiFp;\n/**\n * OptionsApi - factory interface\n * @export\n */\nconst OptionsApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.OptionsApiFp)(configuration);\n    return {\n        /**\n         * Returns the option chain for the specified symbol in the specified account.\n         * @summary Get the options chain for a symbol\n         * @param {OptionsApiGetOptionsChainRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOptionsChain(requestParameters, options) {\n            return localVarFp.getOptionsChain(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of option positions in the specified account. For stock/ETF/crypto/mutual fund positions, please use the [positions endpoint](/reference/Account%20Information/AccountInformation_getUserAccountPositions).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n         * @summary List account option positions\n         * @param {OptionsApiListOptionHoldingsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOptionHoldings(requestParameters, options) {\n            return localVarFp.listOptionHoldings(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.OptionsApiFactory = OptionsApiFactory;\n/**\n * OptionsApiGenerated - object-oriented interface\n * @export\n * @class OptionsApiGenerated\n * @extends {BaseAPI}\n */\nclass OptionsApiGenerated extends base_1.BaseAPI {\n    /**\n     * Returns the option chain for the specified symbol in the specified account.\n     * @summary Get the options chain for a symbol\n     * @param {OptionsApiGetOptionsChainRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OptionsApiGenerated\n     */\n    getOptionsChain(requestParameters, options) {\n        return (0, exports.OptionsApiFp)(this.configuration).getOptionsChain(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of option positions in the specified account. For stock/ETF/crypto/mutual fund positions, please use the [positions endpoint](/reference/Account%20Information/AccountInformation_getUserAccountPositions).  The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for \\\"Cache Expiry Time\\\" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.\n     * @summary List account option positions\n     * @param {OptionsApiListOptionHoldingsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OptionsApiGenerated\n     */\n    listOptionHoldings(requestParameters, options) {\n        return (0, exports.OptionsApiFp)(this.configuration).listOptionHoldings(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.OptionsApiGenerated = OptionsApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsApi = void 0;\nconst options_api_generated_1 = require(\"./options-api-generated\");\n__exportStar(require(\"./options-api-generated\"), exports);\nclass OptionsApi extends options_api_generated_1.OptionsApiGenerated {\n}\nexports.OptionsApi = OptionsApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReferenceDataApiGenerated = exports.ReferenceDataApiFactory = exports.ReferenceDataApiFp = exports.ReferenceDataApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * ReferenceDataApi - axios parameter creator\n * @export\n */\nconst ReferenceDataApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns an Exchange Rate Pair object for the specified Currency Pair.\n         * @summary Get exchange rate of a currency pair\n         * @param {string} currencyPair A currency pair based on currency code for example, {CAD-USD}\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrencyExchangeRatePair: (currencyPair, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'currencyPair' is not null or undefined\n            (0, common_1.assertParamExists)('getCurrencyExchangeRatePair', 'currencyPair', currencyPair);\n            const localVarPath = `/currencies/rates/{currencyPair}`\n                .replace(`{${\"currencyPair\"}}`, encodeURIComponent(String(currencyPair !== undefined ? currencyPair : `-currencyPair-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/currencies/rates/{currencyPair}',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns configurations for your SnapTrade Client ID, including allowed brokerages and data access.\n         * @summary Get Client Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPartnerInfo: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/snapTrade/partners`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/snapTrade/partners',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Return all available security types supported by SnapTrade.\n         * @summary List security types\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSecurityTypes: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/securityTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/securityTypes',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all supported Exchanges.\n         * @summary Get exchanges\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStockExchanges: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/exchanges`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/exchanges',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.\n         * @summary Search symbols\n         * @param {SymbolQuery} [symbolQuery]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbols: (symbolQuery, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/symbols`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: symbolQuery,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/symbols',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(symbolQuery, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns the Universal Symbol object specified by the ticker or the Universal Symbol ID. When a ticker is specified, the first matching result is returned. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click on \\\"Yahoo Finance Market Coverage and Data Delays\\\"). For example, for securities traded on the Toronto Stock Exchange, the symbol has a \\'.TO\\' suffix. For securities traded on NASDAQ or NYSE, the symbol does not have a suffix. Please use the ticker with the proper suffix for the best results.\n         * @summary Get symbol detail\n         * @param {string} query The ticker or Universal Symbol ID to look up the symbol with.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbolsByTicker: (query, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'query' is not null or undefined\n            (0, common_1.assertParamExists)('getSymbolsByTicker', 'query', query);\n            const localVarPath = `/symbols/{query}`\n                .replace(`{${\"query\"}}`, encodeURIComponent(String(query !== undefined ? query : `-query-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/symbols/{query}',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all defined Brokerage authorization Type objects.\n         * @summary Get all brokerage authorization types\n         * @param {string} [brokerage] Comma separated value of brokerage slugs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageAuthorizationType: (brokerage, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/brokerageAuthorizationTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (brokerage !== undefined) {\n                localVarQueryParameter['brokerage'] = brokerage;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/brokerageAuthorizationTypes',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all brokerage instruments available for a given brokerage. Not all brokerages support this. The ones that don\\'t will return an empty list.\n         * @summary Get brokerage instruments\n         * @param {string} slug A short, unique identifier for the brokerage. It is usually the name of the brokerage in capital letters and will never change.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageInstruments: (slug, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'slug' is not null or undefined\n            (0, common_1.assertParamExists)('listAllBrokerageInstruments', 'slug', slug);\n            const localVarPath = `/brokerages/{slug}/instruments`\n                .replace(`{${\"slug\"}}`, encodeURIComponent(String(slug !== undefined ? slug : `-slug-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/brokerages/{slug}/instruments',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all defined Brokerage objects.\n         * @summary Get brokerages\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerages: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/brokerages`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/brokerages',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all defined Currency objects.\n         * @summary Get currencies\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrencies: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/currencies`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/currencies',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of all Exchange Rate Pairs for all supported Currencies.\n         * @summary Get currency exchange rates\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrenciesRates: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/currencies/rates`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/currencies/rates',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.  The search results are further limited to the symbols supported by the brokerage for which the account is under.\n         * @summary Search account symbols\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {SymbolQuery} [symbolQuery]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        symbolSearchUserAccount: (userId, userSecret, accountId, symbolQuery, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('symbolSearchUserAccount', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('symbolSearchUserAccount', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('symbolSearchUserAccount', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/symbols`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: symbolQuery,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/symbols',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(symbolQuery, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.ReferenceDataApiAxiosParamCreator = ReferenceDataApiAxiosParamCreator;\n/**\n * ReferenceDataApi - functional programming interface\n * @export\n */\nconst ReferenceDataApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.ReferenceDataApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Returns an Exchange Rate Pair object for the specified Currency Pair.\n         * @summary Get exchange rate of a currency pair\n         * @param {ReferenceDataApiGetCurrencyExchangeRatePairRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrencyExchangeRatePair(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getCurrencyExchangeRatePair(requestParameters.currencyPair, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns configurations for your SnapTrade Client ID, including allowed brokerages and data access.\n         * @summary Get Client Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPartnerInfo(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getPartnerInfo(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Return all available security types supported by SnapTrade.\n         * @summary List security types\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSecurityTypes(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getSecurityTypes(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all supported Exchanges.\n         * @summary Get exchanges\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStockExchanges(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getStockExchanges(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.\n         * @summary Search symbols\n         * @param {ReferenceDataApiGetSymbolsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbols(requestParameters = {}, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const symbolQuery = {\n                    substring: requestParameters.substring\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getSymbols(symbolQuery, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns the Universal Symbol object specified by the ticker or the Universal Symbol ID. When a ticker is specified, the first matching result is returned. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click on \\\"Yahoo Finance Market Coverage and Data Delays\\\"). For example, for securities traded on the Toronto Stock Exchange, the symbol has a \\'.TO\\' suffix. For securities traded on NASDAQ or NYSE, the symbol does not have a suffix. Please use the ticker with the proper suffix for the best results.\n         * @summary Get symbol detail\n         * @param {ReferenceDataApiGetSymbolsByTickerRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbolsByTicker(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getSymbolsByTicker(requestParameters.query, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all defined Brokerage authorization Type objects.\n         * @summary Get all brokerage authorization types\n         * @param {ReferenceDataApiListAllBrokerageAuthorizationTypeRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageAuthorizationType(requestParameters = {}, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAllBrokerageAuthorizationType(requestParameters.brokerage, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all brokerage instruments available for a given brokerage. Not all brokerages support this. The ones that don\\'t will return an empty list.\n         * @summary Get brokerage instruments\n         * @param {ReferenceDataApiListAllBrokerageInstrumentsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageInstruments(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAllBrokerageInstruments(requestParameters.slug, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all defined Brokerage objects.\n         * @summary Get brokerages\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerages(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAllBrokerages(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all defined Currency objects.\n         * @summary Get currencies\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrencies(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAllCurrencies(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of all Exchange Rate Pairs for all supported Currencies.\n         * @summary Get currency exchange rates\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrenciesRates(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAllCurrenciesRates(options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.  The search results are further limited to the symbols supported by the brokerage for which the account is under.\n         * @summary Search account symbols\n         * @param {ReferenceDataApiSymbolSearchUserAccountRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        symbolSearchUserAccount(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const symbolQuery = {\n                    substring: requestParameters.substring\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.symbolSearchUserAccount(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, symbolQuery, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.ReferenceDataApiFp = ReferenceDataApiFp;\n/**\n * ReferenceDataApi - factory interface\n * @export\n */\nconst ReferenceDataApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.ReferenceDataApiFp)(configuration);\n    return {\n        /**\n         * Returns an Exchange Rate Pair object for the specified Currency Pair.\n         * @summary Get exchange rate of a currency pair\n         * @param {ReferenceDataApiGetCurrencyExchangeRatePairRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrencyExchangeRatePair(requestParameters, options) {\n            return localVarFp.getCurrencyExchangeRatePair(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns configurations for your SnapTrade Client ID, including allowed brokerages and data access.\n         * @summary Get Client Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPartnerInfo(options) {\n            return localVarFp.getPartnerInfo(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Return all available security types supported by SnapTrade.\n         * @summary List security types\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSecurityTypes(options) {\n            return localVarFp.getSecurityTypes(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all supported Exchanges.\n         * @summary Get exchanges\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStockExchanges(options) {\n            return localVarFp.getStockExchanges(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.\n         * @summary Search symbols\n         * @param {ReferenceDataApiGetSymbolsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbols(requestParameters = {}, options) {\n            return localVarFp.getSymbols(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns the Universal Symbol object specified by the ticker or the Universal Symbol ID. When a ticker is specified, the first matching result is returned. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click on \\\"Yahoo Finance Market Coverage and Data Delays\\\"). For example, for securities traded on the Toronto Stock Exchange, the symbol has a \\'.TO\\' suffix. For securities traded on NASDAQ or NYSE, the symbol does not have a suffix. Please use the ticker with the proper suffix for the best results.\n         * @summary Get symbol detail\n         * @param {ReferenceDataApiGetSymbolsByTickerRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSymbolsByTicker(requestParameters, options) {\n            return localVarFp.getSymbolsByTicker(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all defined Brokerage authorization Type objects.\n         * @summary Get all brokerage authorization types\n         * @param {ReferenceDataApiListAllBrokerageAuthorizationTypeRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageAuthorizationType(requestParameters = {}, options) {\n            return localVarFp.listAllBrokerageAuthorizationType(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all brokerage instruments available for a given brokerage. Not all brokerages support this. The ones that don\\'t will return an empty list.\n         * @summary Get brokerage instruments\n         * @param {ReferenceDataApiListAllBrokerageInstrumentsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerageInstruments(requestParameters, options) {\n            return localVarFp.listAllBrokerageInstruments(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all defined Brokerage objects.\n         * @summary Get brokerages\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllBrokerages(options) {\n            return localVarFp.listAllBrokerages(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all defined Currency objects.\n         * @summary Get currencies\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrencies(options) {\n            return localVarFp.listAllCurrencies(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of all Exchange Rate Pairs for all supported Currencies.\n         * @summary Get currency exchange rates\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listAllCurrenciesRates(options) {\n            return localVarFp.listAllCurrenciesRates(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.  The search results are further limited to the symbols supported by the brokerage for which the account is under.\n         * @summary Search account symbols\n         * @param {ReferenceDataApiSymbolSearchUserAccountRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        symbolSearchUserAccount(requestParameters, options) {\n            return localVarFp.symbolSearchUserAccount(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.ReferenceDataApiFactory = ReferenceDataApiFactory;\n/**\n * ReferenceDataApiGenerated - object-oriented interface\n * @export\n * @class ReferenceDataApiGenerated\n * @extends {BaseAPI}\n */\nclass ReferenceDataApiGenerated extends base_1.BaseAPI {\n    /**\n     * Returns an Exchange Rate Pair object for the specified Currency Pair.\n     * @summary Get exchange rate of a currency pair\n     * @param {ReferenceDataApiGetCurrencyExchangeRatePairRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getCurrencyExchangeRatePair(requestParameters, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getCurrencyExchangeRatePair(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns configurations for your SnapTrade Client ID, including allowed brokerages and data access.\n     * @summary Get Client Info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getPartnerInfo(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getPartnerInfo(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Return all available security types supported by SnapTrade.\n     * @summary List security types\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getSecurityTypes(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getSecurityTypes(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all supported Exchanges.\n     * @summary Get exchanges\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getStockExchanges(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getStockExchanges(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.\n     * @summary Search symbols\n     * @param {ReferenceDataApiGetSymbolsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getSymbols(requestParameters = {}, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getSymbols(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns the Universal Symbol object specified by the ticker or the Universal Symbol ID. When a ticker is specified, the first matching result is returned. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click on \\\"Yahoo Finance Market Coverage and Data Delays\\\"). For example, for securities traded on the Toronto Stock Exchange, the symbol has a \\'.TO\\' suffix. For securities traded on NASDAQ or NYSE, the symbol does not have a suffix. Please use the ticker with the proper suffix for the best results.\n     * @summary Get symbol detail\n     * @param {ReferenceDataApiGetSymbolsByTickerRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    getSymbolsByTicker(requestParameters, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).getSymbolsByTicker(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all defined Brokerage authorization Type objects.\n     * @summary Get all brokerage authorization types\n     * @param {ReferenceDataApiListAllBrokerageAuthorizationTypeRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    listAllBrokerageAuthorizationType(requestParameters = {}, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).listAllBrokerageAuthorizationType(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all brokerage instruments available for a given brokerage. Not all brokerages support this. The ones that don\\'t will return an empty list.\n     * @summary Get brokerage instruments\n     * @param {ReferenceDataApiListAllBrokerageInstrumentsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    listAllBrokerageInstruments(requestParameters, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).listAllBrokerageInstruments(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all defined Brokerage objects.\n     * @summary Get brokerages\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    listAllBrokerages(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).listAllBrokerages(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all defined Currency objects.\n     * @summary Get currencies\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    listAllCurrencies(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).listAllCurrencies(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of all Exchange Rate Pairs for all supported Currencies.\n     * @summary Get currency exchange rates\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    listAllCurrenciesRates(options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).listAllCurrenciesRates(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.  The search results are further limited to the symbols supported by the brokerage for which the account is under.\n     * @summary Search account symbols\n     * @param {ReferenceDataApiSymbolSearchUserAccountRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReferenceDataApiGenerated\n     */\n    symbolSearchUserAccount(requestParameters, options) {\n        return (0, exports.ReferenceDataApiFp)(this.configuration).symbolSearchUserAccount(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.ReferenceDataApiGenerated = ReferenceDataApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReferenceDataApi = void 0;\nconst reference_data_api_generated_1 = require(\"./reference-data-api-generated\");\n__exportStar(require(\"./reference-data-api-generated\"), exports);\nclass ReferenceDataApi extends reference_data_api_generated_1.ReferenceDataApiGenerated {\n}\nexports.ReferenceDataApi = ReferenceDataApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TradingApiGenerated = exports.TradingApiFactory = exports.TradingApiFp = exports.TradingApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * TradingApi - axios parameter creator\n * @export\n */\nconst TradingApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Cancels an order in the specified account. Accepts order IDs for all asset types.\n         * @summary Cancel order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {AccountInformationGetUserAccountOrderDetailRequest} accountInformationGetUserAccountOrderDetailRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: (userId, userSecret, accountId, accountInformationGetUserAccountOrderDetailRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('cancelOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('cancelOrder', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('cancelOrder', 'accountId', accountId);\n            // verify required parameter 'accountInformationGetUserAccountOrderDetailRequest' is not null or undefined\n            (0, common_1.assertParamExists)('cancelOrder', 'accountInformationGetUserAccountOrderDetailRequest', accountInformationGetUserAccountOrderDetailRequest);\n            const localVarPath = `/accounts/{accountId}/trading/cancel`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: accountInformationGetUserAccountOrderDetailRequest,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/cancel',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(accountInformationGetUserAccountOrderDetailRequest, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * **This endpoint is deprecated. Please switch to [the new cancel order endpoint](/reference/Trading/Trading_cancelOrder) ** Attempts to cancel an open order with the brokerage. If the order is no longer cancellable, the request will be rejected.\n         * @summary Cancel equity order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {AccountInformationGetUserAccountOrderDetailRequest} accountInformationGetUserAccountOrderDetailRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        cancelUserAccountOrder: (userId, userSecret, accountId, accountInformationGetUserAccountOrderDetailRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('cancelUserAccountOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('cancelUserAccountOrder', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('cancelUserAccountOrder', 'accountId', accountId);\n            // verify required parameter 'accountInformationGetUserAccountOrderDetailRequest' is not null or undefined\n            (0, common_1.assertParamExists)('cancelUserAccountOrder', 'accountInformationGetUserAccountOrderDetailRequest', accountInformationGetUserAccountOrderDetailRequest);\n            const localVarPath = `/accounts/{accountId}/orders/cancel`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: accountInformationGetUserAccountOrderDetailRequest,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/orders/cancel',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(accountInformationGetUserAccountOrderDetailRequest, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Gets a quote for the specified account.\n         * @summary Get crypto pair quote\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {string} instrumentSymbol\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCryptocurrencyPairQuote: (userId, userSecret, accountId, instrumentSymbol, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getCryptocurrencyPairQuote', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getCryptocurrencyPairQuote', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getCryptocurrencyPairQuote', 'accountId', accountId);\n            // verify required parameter 'instrumentSymbol' is not null or undefined\n            (0, common_1.assertParamExists)('getCryptocurrencyPairQuote', 'instrumentSymbol', instrumentSymbol);\n            const localVarPath = `/accounts/{accountId}/trading/instruments/cryptocurrencyPairs/{instrumentSymbol}/quote`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)))\n                .replace(`{${\"instrumentSymbol\"}}`, encodeURIComponent(String(instrumentSymbol !== undefined ? instrumentSymbol : `-instrumentSymbol-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/instruments/cryptocurrencyPairs/{instrumentSymbol}/quote',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Simulates an order and its impact on the account. This endpoint does not place the order with the brokerage. If successful, it returns a `Trade` object and the ID of the object can be used to place the order with the brokerage using the [place checked order endpoint](/reference/Trading/Trading_placeOrder). Please note that the `Trade` object returned expires after 5 minutes. Any order placed using an expired `Trade` will be rejected.\n         * @summary Check equity order impact\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {ManualTradeForm} manualTradeForm\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderImpact: (userId, userSecret, manualTradeForm, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getOrderImpact', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getOrderImpact', 'userSecret', userSecret);\n            // verify required parameter 'manualTradeForm' is not null or undefined\n            (0, common_1.assertParamExists)('getOrderImpact', 'manualTradeForm', manualTradeForm);\n            const localVarPath = `/trade/impact`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: manualTradeForm,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/trade/impact',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(manualTradeForm, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns quotes from the brokerage for the specified symbols and account.  The quotes returned can be delayed depending on the brokerage the account belongs to. It is highly recommended that you use your own market data provider for real-time quotes instead of relying on this endpoint.  This endpoint does not work for options quotes.  This endpoint is disabled for free plans by default. Please contact support to enable this endpoint if needed.\n         * @summary Get equity symbol quotes\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} symbols List of Universal Symbol IDs or tickers to get quotes for. When providing multiple values, use a comma as separator\n         * @param {string} accountId\n         * @param {boolean} [useTicker] Should be set to &#x60;True&#x60; if &#x60;symbols&#x60; are comprised of tickers. Defaults to &#x60;False&#x60; if not provided.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountQuotes: (userId, userSecret, symbols, accountId, useTicker, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountQuotes', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountQuotes', 'userSecret', userSecret);\n            // verify required parameter 'symbols' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountQuotes', 'symbols', symbols);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('getUserAccountQuotes', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/quotes`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (symbols !== undefined) {\n                localVarQueryParameter['symbols'] = symbols;\n            }\n            if (useTicker !== undefined) {\n                localVarQueryParameter['use_ticker'] = useTicker;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/quotes',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Places a bracket order (entry order + OCO of stop loss and take profit). Disabled by default please contact support for use. Only supported on certain brokerages\n         * @summary Place bracket order\n         * @param {string} accountId The ID of the account to execute the trade on.\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {ManualTradeFormBracket} manualTradeFormBracket\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeBracketOrder: (accountId, userId, userSecret, manualTradeFormBracket, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('placeBracketOrder', 'accountId', accountId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('placeBracketOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('placeBracketOrder', 'userSecret', userSecret);\n            // verify required parameter 'manualTradeFormBracket' is not null or undefined\n            (0, common_1.assertParamExists)('placeBracketOrder', 'manualTradeFormBracket', manualTradeFormBracket);\n            const localVarPath = `/accounts/{accountId}/trading/bracket`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: manualTradeFormBracket,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/bracket',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(manualTradeFormBracket, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Places an order in the specified account. This endpoint does not compute the impact to the account balance from the order before submitting the order.\n         * @summary Place crypto order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {CryptoOrderForm} cryptoOrderForm\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeCryptoOrder: (userId, userSecret, accountId, cryptoOrderForm, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('placeCryptoOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('placeCryptoOrder', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('placeCryptoOrder', 'accountId', accountId);\n            // verify required parameter 'cryptoOrderForm' is not null or undefined\n            (0, common_1.assertParamExists)('placeCryptoOrder', 'cryptoOrderForm', cryptoOrderForm);\n            const localVarPath = `/accounts/{accountId}/trading/crypto`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: cryptoOrderForm,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/crypto',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(cryptoOrderForm, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Places a brokerage order in the specified account. The order could be rejected by the brokerage if it is invalid or if the account does not have sufficient funds.  This endpoint does not compute the impact to the account balance from the order and any potential commissions before submitting the order to the brokerage. If that is desired, you can use the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place equity order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {ManualTradeFormWithOptions} manualTradeFormWithOptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeForceOrder: (userId, userSecret, manualTradeFormWithOptions, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('placeForceOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('placeForceOrder', 'userSecret', userSecret);\n            // verify required parameter 'manualTradeFormWithOptions' is not null or undefined\n            (0, common_1.assertParamExists)('placeForceOrder', 'manualTradeFormWithOptions', manualTradeFormWithOptions);\n            const localVarPath = `/trade/place`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: manualTradeFormWithOptions,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/trade/place',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(manualTradeFormWithOptions, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Places a multi-leg option order. Only supported on certain option trading brokerages. https://snaptrade.notion.site/brokerages has information on brokerage trading support\n         * @summary Place option order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {MlegTradeForm} mlegTradeForm\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeMlegOrder: (userId, userSecret, accountId, mlegTradeForm, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('placeMlegOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('placeMlegOrder', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('placeMlegOrder', 'accountId', accountId);\n            // verify required parameter 'mlegTradeForm' is not null or undefined\n            (0, common_1.assertParamExists)('placeMlegOrder', 'mlegTradeForm', mlegTradeForm);\n            const localVarPath = `/accounts/{accountId}/trading/options`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: mlegTradeForm,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/options',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(mlegTradeForm, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Places the previously checked order with the brokerage. The `tradeId` is obtained from the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact). If you prefer to place the order without checking for impact first, you can use the [place order endpoint](/reference/Trading/Trading_placeForceOrder).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place checked equity order\n         * @param {string} tradeId Obtained from calling the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact)\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {ValidatedTradeBody} [validatedTradeBody]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeOrder: (tradeId, userId, userSecret, validatedTradeBody, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'tradeId' is not null or undefined\n            (0, common_1.assertParamExists)('placeOrder', 'tradeId', tradeId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('placeOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('placeOrder', 'userSecret', userSecret);\n            const localVarPath = `/trade/{tradeId}`\n                .replace(`{${\"tradeId\"}}`, encodeURIComponent(String(tradeId !== undefined ? tradeId : `-tradeId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: validatedTradeBody,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/trade/{tradeId}',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(validatedTradeBody, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Previews an order using the specified account.\n         * @summary Preview crypto order\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {CryptoOrderForm} cryptoOrderForm\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        previewCryptoOrder: (userId, userSecret, accountId, cryptoOrderForm, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('previewCryptoOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('previewCryptoOrder', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('previewCryptoOrder', 'accountId', accountId);\n            // verify required parameter 'cryptoOrderForm' is not null or undefined\n            (0, common_1.assertParamExists)('previewCryptoOrder', 'cryptoOrderForm', cryptoOrderForm);\n            const localVarPath = `/accounts/{accountId}/trading/crypto/preview`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: cryptoOrderForm,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/crypto/preview',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(cryptoOrderForm, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Replaces an existing pending order with a new one. The way this works is brokerage dependent, but usually involves cancelling the existing order and placing a new one. The order\\'s brokerage_order_id may or may not change, be sure to use the one returned in the response going forward. Only supported on some brokerages\n         * @summary Replace order\n         * @param {string} accountId The ID of the account to execute the trade on.\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {ManualTradeReplaceForm} manualTradeReplaceForm\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        replaceOrder: (accountId, userId, userSecret, manualTradeReplaceForm, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('replaceOrder', 'accountId', accountId);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('replaceOrder', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('replaceOrder', 'userSecret', userSecret);\n            // verify required parameter 'manualTradeReplaceForm' is not null or undefined\n            (0, common_1.assertParamExists)('replaceOrder', 'manualTradeReplaceForm', manualTradeReplaceForm);\n            const localVarPath = `/accounts/{accountId}/trading/replace`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                requestBody: manualTradeReplaceForm,\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/replace',\n                httpMethod: 'POST'\n            });\n            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(manualTradeReplaceForm, localVarRequestOptions, configuration);\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Searches cryptocurrency pairs instruments accessible to the specified account. Both `base` and `quote` are optional. Omit both for a full list of cryptocurrency pairs.\n         * @summary Get crypto pairs\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} accountId\n         * @param {string} [base]\n         * @param {string} [quote]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchCryptocurrencyPairInstruments: (userId, userSecret, accountId, base, quote, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('searchCryptocurrencyPairInstruments', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('searchCryptocurrencyPairInstruments', 'userSecret', userSecret);\n            // verify required parameter 'accountId' is not null or undefined\n            (0, common_1.assertParamExists)('searchCryptocurrencyPairInstruments', 'accountId', accountId);\n            const localVarPath = `/accounts/{accountId}/trading/instruments/cryptocurrencyPairs`\n                .replace(`{${\"accountId\"}}`, encodeURIComponent(String(accountId !== undefined ? accountId : `-accountId-`)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            if (base !== undefined) {\n                localVarQueryParameter['base'] = base;\n            }\n            if (quote !== undefined) {\n                localVarQueryParameter['quote'] = quote;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/accounts/{accountId}/trading/instruments/cryptocurrencyPairs',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.TradingApiAxiosParamCreator = TradingApiAxiosParamCreator;\n/**\n * TradingApi - functional programming interface\n * @export\n */\nconst TradingApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.TradingApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * Cancels an order in the specified account. Accepts order IDs for all asset types.\n         * @summary Cancel order\n         * @param {TradingApiCancelOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const accountInformationGetUserAccountOrderDetailRequest = {\n                    brokerage_order_id: requestParameters.brokerage_order_id\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.cancelOrder(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, accountInformationGetUserAccountOrderDetailRequest, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * **This endpoint is deprecated. Please switch to [the new cancel order endpoint](/reference/Trading/Trading_cancelOrder) ** Attempts to cancel an open order with the brokerage. If the order is no longer cancellable, the request will be rejected.\n         * @summary Cancel equity order\n         * @param {TradingApiCancelUserAccountOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        cancelUserAccountOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const accountInformationGetUserAccountOrderDetailRequest = {\n                    brokerage_order_id: requestParameters.brokerage_order_id\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.cancelUserAccountOrder(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, accountInformationGetUserAccountOrderDetailRequest, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Gets a quote for the specified account.\n         * @summary Get crypto pair quote\n         * @param {TradingApiGetCryptocurrencyPairQuoteRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCryptocurrencyPairQuote(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getCryptocurrencyPairQuote(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, requestParameters.instrumentSymbol, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Simulates an order and its impact on the account. This endpoint does not place the order with the brokerage. If successful, it returns a `Trade` object and the ID of the object can be used to place the order with the brokerage using the [place checked order endpoint](/reference/Trading/Trading_placeOrder). Please note that the `Trade` object returned expires after 5 minutes. Any order placed using an expired `Trade` will be rejected.\n         * @summary Check equity order impact\n         * @param {TradingApiGetOrderImpactRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderImpact(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const manualTradeForm = {\n                    account_id: requestParameters.account_id,\n                    action: requestParameters.action,\n                    universal_symbol_id: requestParameters.universal_symbol_id,\n                    order_type: requestParameters.order_type,\n                    time_in_force: requestParameters.time_in_force,\n                    price: requestParameters.price,\n                    stop: requestParameters.stop,\n                    units: requestParameters.units,\n                    notional_value: requestParameters.notional_value\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getOrderImpact(requestParameters.userId, requestParameters.userSecret, manualTradeForm, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns quotes from the brokerage for the specified symbols and account.  The quotes returned can be delayed depending on the brokerage the account belongs to. It is highly recommended that you use your own market data provider for real-time quotes instead of relying on this endpoint.  This endpoint does not work for options quotes.  This endpoint is disabled for free plans by default. Please contact support to enable this endpoint if needed.\n         * @summary Get equity symbol quotes\n         * @param {TradingApiGetUserAccountQuotesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountQuotes(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getUserAccountQuotes(requestParameters.userId, requestParameters.userSecret, requestParameters.symbols, requestParameters.accountId, requestParameters.useTicker, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Places a bracket order (entry order + OCO of stop loss and take profit). Disabled by default please contact support for use. Only supported on certain brokerages\n         * @summary Place bracket order\n         * @param {TradingApiPlaceBracketOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeBracketOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const manualTradeFormBracket = {\n                    action: requestParameters.action,\n                    instrument: requestParameters.instrument,\n                    order_type: requestParameters.order_type,\n                    time_in_force: requestParameters.time_in_force,\n                    price: requestParameters.price,\n                    stop: requestParameters.stop,\n                    units: requestParameters.units,\n                    stop_loss: requestParameters.stop_loss,\n                    take_profit: requestParameters.take_profit\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.placeBracketOrder(requestParameters.accountId, requestParameters.userId, requestParameters.userSecret, manualTradeFormBracket, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Places an order in the specified account. This endpoint does not compute the impact to the account balance from the order before submitting the order.\n         * @summary Place crypto order\n         * @param {TradingApiPlaceCryptoOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeCryptoOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const cryptoOrderForm = {\n                    instrument: requestParameters.instrument,\n                    side: requestParameters.side,\n                    type: requestParameters.type,\n                    time_in_force: requestParameters.time_in_force,\n                    amount: requestParameters.amount,\n                    limit_price: requestParameters.limit_price,\n                    stop_price: requestParameters.stop_price,\n                    post_only: requestParameters.post_only,\n                    expiration_date: requestParameters.expiration_date\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.placeCryptoOrder(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, cryptoOrderForm, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Places a brokerage order in the specified account. The order could be rejected by the brokerage if it is invalid or if the account does not have sufficient funds.  This endpoint does not compute the impact to the account balance from the order and any potential commissions before submitting the order to the brokerage. If that is desired, you can use the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place equity order\n         * @param {TradingApiPlaceForceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeForceOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const manualTradeFormWithOptions = {\n                    account_id: requestParameters.account_id,\n                    action: requestParameters.action,\n                    universal_symbol_id: requestParameters.universal_symbol_id,\n                    symbol: requestParameters.symbol,\n                    order_type: requestParameters.order_type,\n                    time_in_force: requestParameters.time_in_force,\n                    price: requestParameters.price,\n                    stop: requestParameters.stop,\n                    units: requestParameters.units,\n                    notional_value: requestParameters.notional_value\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.placeForceOrder(requestParameters.userId, requestParameters.userSecret, manualTradeFormWithOptions, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Places a multi-leg option order. Only supported on certain option trading brokerages. https://snaptrade.notion.site/brokerages has information on brokerage trading support\n         * @summary Place option order\n         * @param {TradingApiPlaceMlegOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeMlegOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const mlegTradeForm = {\n                    order_type: requestParameters.order_type,\n                    time_in_force: requestParameters.time_in_force,\n                    limit_price: requestParameters.limit_price,\n                    stop_price: requestParameters.stop_price,\n                    price_effect: requestParameters.price_effect,\n                    legs: requestParameters.legs\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.placeMlegOrder(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, mlegTradeForm, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Places the previously checked order with the brokerage. The `tradeId` is obtained from the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact). If you prefer to place the order without checking for impact first, you can use the [place order endpoint](/reference/Trading/Trading_placeForceOrder).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place checked equity order\n         * @param {TradingApiPlaceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const validatedTradeBody = {\n                    wait_to_confirm: requestParameters.wait_to_confirm\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.placeOrder(requestParameters.tradeId, requestParameters.userId, requestParameters.userSecret, validatedTradeBody, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Previews an order using the specified account.\n         * @summary Preview crypto order\n         * @param {TradingApiPreviewCryptoOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        previewCryptoOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const cryptoOrderForm = {\n                    instrument: requestParameters.instrument,\n                    side: requestParameters.side,\n                    type: requestParameters.type,\n                    time_in_force: requestParameters.time_in_force,\n                    amount: requestParameters.amount,\n                    limit_price: requestParameters.limit_price,\n                    stop_price: requestParameters.stop_price,\n                    post_only: requestParameters.post_only,\n                    expiration_date: requestParameters.expiration_date\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.previewCryptoOrder(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, cryptoOrderForm, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Replaces an existing pending order with a new one. The way this works is brokerage dependent, but usually involves cancelling the existing order and placing a new one. The order\\'s brokerage_order_id may or may not change, be sure to use the one returned in the response going forward. Only supported on some brokerages\n         * @summary Replace order\n         * @param {TradingApiReplaceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        replaceOrder(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const manualTradeReplaceForm = {\n                    brokerage_order_id: requestParameters.brokerage_order_id,\n                    action: requestParameters.action,\n                    order_type: requestParameters.order_type,\n                    time_in_force: requestParameters.time_in_force,\n                    price: requestParameters.price,\n                    symbol: requestParameters.symbol,\n                    stop: requestParameters.stop,\n                    units: requestParameters.units\n                };\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.replaceOrder(requestParameters.accountId, requestParameters.userId, requestParameters.userSecret, manualTradeReplaceForm, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Searches cryptocurrency pairs instruments accessible to the specified account. Both `base` and `quote` are optional. Omit both for a full list of cryptocurrency pairs.\n         * @summary Get crypto pairs\n         * @param {TradingApiSearchCryptocurrencyPairInstrumentsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchCryptocurrencyPairInstruments(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.searchCryptocurrencyPairInstruments(requestParameters.userId, requestParameters.userSecret, requestParameters.accountId, requestParameters.base, requestParameters.quote, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.TradingApiFp = TradingApiFp;\n/**\n * TradingApi - factory interface\n * @export\n */\nconst TradingApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.TradingApiFp)(configuration);\n    return {\n        /**\n         * Cancels an order in the specified account. Accepts order IDs for all asset types.\n         * @summary Cancel order\n         * @param {TradingApiCancelOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder(requestParameters, options) {\n            return localVarFp.cancelOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * **This endpoint is deprecated. Please switch to [the new cancel order endpoint](/reference/Trading/Trading_cancelOrder) ** Attempts to cancel an open order with the brokerage. If the order is no longer cancellable, the request will be rejected.\n         * @summary Cancel equity order\n         * @param {TradingApiCancelUserAccountOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        cancelUserAccountOrder(requestParameters, options) {\n            return localVarFp.cancelUserAccountOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Gets a quote for the specified account.\n         * @summary Get crypto pair quote\n         * @param {TradingApiGetCryptocurrencyPairQuoteRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCryptocurrencyPairQuote(requestParameters, options) {\n            return localVarFp.getCryptocurrencyPairQuote(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Simulates an order and its impact on the account. This endpoint does not place the order with the brokerage. If successful, it returns a `Trade` object and the ID of the object can be used to place the order with the brokerage using the [place checked order endpoint](/reference/Trading/Trading_placeOrder). Please note that the `Trade` object returned expires after 5 minutes. Any order placed using an expired `Trade` will be rejected.\n         * @summary Check equity order impact\n         * @param {TradingApiGetOrderImpactRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderImpact(requestParameters, options) {\n            return localVarFp.getOrderImpact(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns quotes from the brokerage for the specified symbols and account.  The quotes returned can be delayed depending on the brokerage the account belongs to. It is highly recommended that you use your own market data provider for real-time quotes instead of relying on this endpoint.  This endpoint does not work for options quotes.  This endpoint is disabled for free plans by default. Please contact support to enable this endpoint if needed.\n         * @summary Get equity symbol quotes\n         * @param {TradingApiGetUserAccountQuotesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserAccountQuotes(requestParameters, options) {\n            return localVarFp.getUserAccountQuotes(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Places a bracket order (entry order + OCO of stop loss and take profit). Disabled by default please contact support for use. Only supported on certain brokerages\n         * @summary Place bracket order\n         * @param {TradingApiPlaceBracketOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeBracketOrder(requestParameters, options) {\n            return localVarFp.placeBracketOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Places an order in the specified account. This endpoint does not compute the impact to the account balance from the order before submitting the order.\n         * @summary Place crypto order\n         * @param {TradingApiPlaceCryptoOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeCryptoOrder(requestParameters, options) {\n            return localVarFp.placeCryptoOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Places a brokerage order in the specified account. The order could be rejected by the brokerage if it is invalid or if the account does not have sufficient funds.  This endpoint does not compute the impact to the account balance from the order and any potential commissions before submitting the order to the brokerage. If that is desired, you can use the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place equity order\n         * @param {TradingApiPlaceForceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeForceOrder(requestParameters, options) {\n            return localVarFp.placeForceOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Places a multi-leg option order. Only supported on certain option trading brokerages. https://snaptrade.notion.site/brokerages has information on brokerage trading support\n         * @summary Place option order\n         * @param {TradingApiPlaceMlegOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeMlegOrder(requestParameters, options) {\n            return localVarFp.placeMlegOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Places the previously checked order with the brokerage. The `tradeId` is obtained from the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact). If you prefer to place the order without checking for impact first, you can use the [place order endpoint](/reference/Trading/Trading_placeForceOrder).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n         * @summary Place checked equity order\n         * @param {TradingApiPlaceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        placeOrder(requestParameters, options) {\n            return localVarFp.placeOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Previews an order using the specified account.\n         * @summary Preview crypto order\n         * @param {TradingApiPreviewCryptoOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        previewCryptoOrder(requestParameters, options) {\n            return localVarFp.previewCryptoOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Replaces an existing pending order with a new one. The way this works is brokerage dependent, but usually involves cancelling the existing order and placing a new one. The order\\'s brokerage_order_id may or may not change, be sure to use the one returned in the response going forward. Only supported on some brokerages\n         * @summary Replace order\n         * @param {TradingApiReplaceOrderRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        replaceOrder(requestParameters, options) {\n            return localVarFp.replaceOrder(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Searches cryptocurrency pairs instruments accessible to the specified account. Both `base` and `quote` are optional. Omit both for a full list of cryptocurrency pairs.\n         * @summary Get crypto pairs\n         * @param {TradingApiSearchCryptocurrencyPairInstrumentsRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchCryptocurrencyPairInstruments(requestParameters, options) {\n            return localVarFp.searchCryptocurrencyPairInstruments(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.TradingApiFactory = TradingApiFactory;\n/**\n * TradingApiGenerated - object-oriented interface\n * @export\n * @class TradingApiGenerated\n * @extends {BaseAPI}\n */\nclass TradingApiGenerated extends base_1.BaseAPI {\n    /**\n     * Cancels an order in the specified account. Accepts order IDs for all asset types.\n     * @summary Cancel order\n     * @param {TradingApiCancelOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    cancelOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).cancelOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * **This endpoint is deprecated. Please switch to [the new cancel order endpoint](/reference/Trading/Trading_cancelOrder) ** Attempts to cancel an open order with the brokerage. If the order is no longer cancellable, the request will be rejected.\n     * @summary Cancel equity order\n     * @param {TradingApiCancelUserAccountOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    cancelUserAccountOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).cancelUserAccountOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Gets a quote for the specified account.\n     * @summary Get crypto pair quote\n     * @param {TradingApiGetCryptocurrencyPairQuoteRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    getCryptocurrencyPairQuote(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).getCryptocurrencyPairQuote(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Simulates an order and its impact on the account. This endpoint does not place the order with the brokerage. If successful, it returns a `Trade` object and the ID of the object can be used to place the order with the brokerage using the [place checked order endpoint](/reference/Trading/Trading_placeOrder). Please note that the `Trade` object returned expires after 5 minutes. Any order placed using an expired `Trade` will be rejected.\n     * @summary Check equity order impact\n     * @param {TradingApiGetOrderImpactRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    getOrderImpact(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).getOrderImpact(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns quotes from the brokerage for the specified symbols and account.  The quotes returned can be delayed depending on the brokerage the account belongs to. It is highly recommended that you use your own market data provider for real-time quotes instead of relying on this endpoint.  This endpoint does not work for options quotes.  This endpoint is disabled for free plans by default. Please contact support to enable this endpoint if needed.\n     * @summary Get equity symbol quotes\n     * @param {TradingApiGetUserAccountQuotesRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    getUserAccountQuotes(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).getUserAccountQuotes(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Places a bracket order (entry order + OCO of stop loss and take profit). Disabled by default please contact support for use. Only supported on certain brokerages\n     * @summary Place bracket order\n     * @param {TradingApiPlaceBracketOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    placeBracketOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).placeBracketOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Places an order in the specified account. This endpoint does not compute the impact to the account balance from the order before submitting the order.\n     * @summary Place crypto order\n     * @param {TradingApiPlaceCryptoOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    placeCryptoOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).placeCryptoOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Places a brokerage order in the specified account. The order could be rejected by the brokerage if it is invalid or if the account does not have sufficient funds.  This endpoint does not compute the impact to the account balance from the order and any potential commissions before submitting the order to the brokerage. If that is desired, you can use the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n     * @summary Place equity order\n     * @param {TradingApiPlaceForceOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    placeForceOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).placeForceOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Places a multi-leg option order. Only supported on certain option trading brokerages. https://snaptrade.notion.site/brokerages has information on brokerage trading support\n     * @summary Place option order\n     * @param {TradingApiPlaceMlegOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    placeMlegOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).placeMlegOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Places the previously checked order with the brokerage. The `tradeId` is obtained from the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact). If you prefer to place the order without checking for impact first, you can use the [place order endpoint](/reference/Trading/Trading_placeForceOrder).  It\\'s recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.\n     * @summary Place checked equity order\n     * @param {TradingApiPlaceOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    placeOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).placeOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Previews an order using the specified account.\n     * @summary Preview crypto order\n     * @param {TradingApiPreviewCryptoOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    previewCryptoOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).previewCryptoOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Replaces an existing pending order with a new one. The way this works is brokerage dependent, but usually involves cancelling the existing order and placing a new one. The order\\'s brokerage_order_id may or may not change, be sure to use the one returned in the response going forward. Only supported on some brokerages\n     * @summary Replace order\n     * @param {TradingApiReplaceOrderRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    replaceOrder(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).replaceOrder(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Searches cryptocurrency pairs instruments accessible to the specified account. Both `base` and `quote` are optional. Omit both for a full list of cryptocurrency pairs.\n     * @summary Get crypto pairs\n     * @param {TradingApiSearchCryptocurrencyPairInstrumentsRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TradingApiGenerated\n     */\n    searchCryptocurrencyPairInstruments(requestParameters, options) {\n        return (0, exports.TradingApiFp)(this.configuration).searchCryptocurrencyPairInstruments(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.TradingApiGenerated = TradingApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TradingApi = void 0;\nconst trading_api_generated_1 = require(\"./trading-api-generated\");\n__exportStar(require(\"./trading-api-generated\"), exports);\nclass TradingApi extends trading_api_generated_1.TradingApiGenerated {\n}\nexports.TradingApi = TradingApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionsAndReportingApiGenerated = exports.TransactionsAndReportingApiFactory = exports.TransactionsAndReportingApiFp = exports.TransactionsAndReportingApiAxiosParamCreator = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"../common\");\n// @ts-ignore\nconst base_1 = require(\"../base\");\nconst requestBeforeHook_1 = require(\"../requestBeforeHook\");\n/**\n * TransactionsAndReportingApi - axios parameter creator\n * @export\n */\nconst TransactionsAndReportingApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * This endpoint is being deprecated but will continue to be available for use via SDKs, please use [the account level endpoint](/reference/Account%20Information/AccountInformation_getAccountActivities) if possible  Returns all historical transactions for the specified user and filtering criteria. It\\'s recommended to use `startDate` and `endDate` to paginate through the data, as the response may be very large for accounts with a long history and/or a lot of activity. There\\'s a max number of 10000 transactions returned per request.  There is no guarantee to the ordering of the transactions returned. Please sort the transactions based on the `trade_date` field if you need them in a specific order.  The data returned here is always cached and refreshed once a day.\n         * @summary Get transaction history for a user\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string | Date} [startDate] The start date (inclusive) of the transaction history to retrieve. If not provided, the default is the first transaction known to SnapTrade based on &#x60;trade_date&#x60;.\n         * @param {string | Date} [endDate] The end date (inclusive) of the transaction history to retrieve. If not provided, the default is the last transaction known to SnapTrade based on &#x60;trade_date&#x60;.\n         * @param {string} [accounts] Optional comma separated list of SnapTrade Account IDs used to filter the request to specific accounts. If not provided, the default is all known brokerage accounts for the user. The &#x60;brokerageAuthorizations&#x60; parameter takes precedence over this parameter.\n         * @param {string} [brokerageAuthorizations] Optional comma separated list of SnapTrade Connection (Brokerage Authorization) IDs used to filter the request to only accounts that belong to those connections. If not provided, the default is all connections for the user. This parameter takes precedence over the &#x60;accounts&#x60; parameter.\n         * @param {string} [type] Optional comma separated list of transaction types to filter by. SnapTrade does a best effort to categorize brokerage transaction types into a common set of values. Here are some of the most popular values:   - &#x60;BUY&#x60; - Asset bought.   - &#x60;SELL&#x60; - Asset sold.   - &#x60;DIVIDEND&#x60; - Dividend payout.   - &#x60;CONTRIBUTION&#x60; - Cash contribution.   - &#x60;WITHDRAWAL&#x60; - Cash withdrawal.   - &#x60;REI&#x60; - Dividend reinvestment.   - &#x60;INTEREST&#x60; - Interest deposited into the account.   - &#x60;FEE&#x60; - Fee withdrawn from the account.   - &#x60;OPTIONEXPIRATION&#x60; - Option expiration event.   - &#x60;OPTIONASSIGNMENT&#x60; - Option assignment event.   - &#x60;OPTIONEXERCISE&#x60; - Option exercise event.   - &#x60;TRANSFER&#x60; - Transfer of assets from one account to another\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getActivities: (userId, userSecret, startDate, endDate, accounts, brokerageAuthorizations, type, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getActivities', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getActivities', 'userSecret', userSecret);\n            const localVarPath = `/activities`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (startDate !== undefined) {\n                localVarQueryParameter['startDate'] = (startDate instanceof Date) ?\n                    startDate.toISOString().substr(0, 10) :\n                    startDate;\n            }\n            if (endDate !== undefined) {\n                localVarQueryParameter['endDate'] = (endDate instanceof Date) ?\n                    endDate.toISOString().substr(0, 10) :\n                    endDate;\n            }\n            if (accounts !== undefined) {\n                localVarQueryParameter['accounts'] = accounts;\n            }\n            if (brokerageAuthorizations !== undefined) {\n                localVarQueryParameter['brokerageAuthorizations'] = brokerageAuthorizations;\n            }\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/activities',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         * Returns performance information (contributions, dividends, rate of return, etc) for a specific timeframe. Please note that Total Equity Timeframe and Rate of Returns are experimental features. Please contact support@snaptrade.com if you notice any inconsistencies.\n         * @summary Get performance information for a specific timeframe\n         * @param {string | Date} startDate\n         * @param {string | Date} endDate\n         * @param {string} userId\n         * @param {string} userSecret\n         * @param {string} [accounts] Optional comma separated list of account IDs used to filter the request on specific accounts\n         * @param {boolean} [detailed] Optional, increases frequency of data points for the total value and contribution charts if set to true\n         * @param {string} [frequency] Optional frequency for the rate of return chart (defaults to monthly). Possible values are daily, weekly, monthly, quarterly, yearly.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getReportingCustomRange: (startDate, endDate, userId, userSecret, accounts, detailed, frequency, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'startDate' is not null or undefined\n            (0, common_1.assertParamExists)('getReportingCustomRange', 'startDate', startDate);\n            // verify required parameter 'endDate' is not null or undefined\n            (0, common_1.assertParamExists)('getReportingCustomRange', 'endDate', endDate);\n            // verify required parameter 'userId' is not null or undefined\n            (0, common_1.assertParamExists)('getReportingCustomRange', 'userId', userId);\n            // verify required parameter 'userSecret' is not null or undefined\n            (0, common_1.assertParamExists)('getReportingCustomRange', 'userSecret', userSecret);\n            const localVarPath = `/performance/custom`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { \"User-Agent\": configuration.userAgent } : {};\n            const localVarQueryParameter = {};\n            // authentication PartnerClientId required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"clientId\", keyParamName: \"clientId\", configuration });\n            // authentication PartnerSignature required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarHeaderParameter, key: \"Signature\", keyParamName: \"signature\", configuration });\n            // authentication PartnerTimestamp required\n            yield (0, common_1.setApiKeyToObject)({ object: localVarQueryParameter, key: \"timestamp\", keyParamName: \"timestamp\", configuration });\n            if (startDate !== undefined) {\n                localVarQueryParameter['startDate'] = (startDate instanceof Date) ?\n                    startDate.toISOString().substr(0, 10) :\n                    startDate;\n            }\n            if (endDate !== undefined) {\n                localVarQueryParameter['endDate'] = (endDate instanceof Date) ?\n                    endDate.toISOString().substr(0, 10) :\n                    endDate;\n            }\n            if (accounts !== undefined) {\n                localVarQueryParameter['accounts'] = accounts;\n            }\n            if (detailed !== undefined) {\n                localVarQueryParameter['detailed'] = detailed;\n            }\n            if (frequency !== undefined) {\n                localVarQueryParameter['frequency'] = frequency;\n            }\n            if (userId !== undefined) {\n                localVarQueryParameter['userId'] = userId;\n            }\n            if (userSecret !== undefined) {\n                localVarQueryParameter['userSecret'] = userSecret;\n            }\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            (0, requestBeforeHook_1.requestBeforeHook)({\n                queryParameters: localVarQueryParameter,\n                requestConfig: localVarRequestOptions,\n                path: localVarPath,\n                configuration,\n                pathTemplate: '/performance/custom',\n                httpMethod: 'GET'\n            });\n            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);\n            return {\n                url: (0, common_1.toPathString)(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\nexports.TransactionsAndReportingApiAxiosParamCreator = TransactionsAndReportingApiAxiosParamCreator;\n/**\n * TransactionsAndReportingApi - functional programming interface\n * @export\n */\nconst TransactionsAndReportingApiFp = function (configuration) {\n    const localVarAxiosParamCreator = (0, exports.TransactionsAndReportingApiAxiosParamCreator)(configuration);\n    return {\n        /**\n         * This endpoint is being deprecated but will continue to be available for use via SDKs, please use [the account level endpoint](/reference/Account%20Information/AccountInformation_getAccountActivities) if possible  Returns all historical transactions for the specified user and filtering criteria. It\\'s recommended to use `startDate` and `endDate` to paginate through the data, as the response may be very large for accounts with a long history and/or a lot of activity. There\\'s a max number of 10000 transactions returned per request.  There is no guarantee to the ordering of the transactions returned. Please sort the transactions based on the `trade_date` field if you need them in a specific order.  The data returned here is always cached and refreshed once a day.\n         * @summary Get transaction history for a user\n         * @param {TransactionsAndReportingApiGetActivitiesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getActivities(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getActivities(requestParameters.userId, requestParameters.userSecret, requestParameters.startDate, requestParameters.endDate, requestParameters.accounts, requestParameters.brokerageAuthorizations, requestParameters.type, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         * Returns performance information (contributions, dividends, rate of return, etc) for a specific timeframe. Please note that Total Equity Timeframe and Rate of Returns are experimental features. Please contact support@snaptrade.com if you notice any inconsistencies.\n         * @summary Get performance information for a specific timeframe\n         * @param {TransactionsAndReportingApiGetReportingCustomRangeRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getReportingCustomRange(requestParameters, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.getReportingCustomRange(requestParameters.startDate, requestParameters.endDate, requestParameters.userId, requestParameters.userSecret, requestParameters.accounts, requestParameters.detailed, requestParameters.frequency, options);\n                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\nexports.TransactionsAndReportingApiFp = TransactionsAndReportingApiFp;\n/**\n * TransactionsAndReportingApi - factory interface\n * @export\n */\nconst TransactionsAndReportingApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = (0, exports.TransactionsAndReportingApiFp)(configuration);\n    return {\n        /**\n         * This endpoint is being deprecated but will continue to be available for use via SDKs, please use [the account level endpoint](/reference/Account%20Information/AccountInformation_getAccountActivities) if possible  Returns all historical transactions for the specified user and filtering criteria. It\\'s recommended to use `startDate` and `endDate` to paginate through the data, as the response may be very large for accounts with a long history and/or a lot of activity. There\\'s a max number of 10000 transactions returned per request.  There is no guarantee to the ordering of the transactions returned. Please sort the transactions based on the `trade_date` field if you need them in a specific order.  The data returned here is always cached and refreshed once a day.\n         * @summary Get transaction history for a user\n         * @param {TransactionsAndReportingApiGetActivitiesRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getActivities(requestParameters, options) {\n            return localVarFp.getActivities(requestParameters, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * Returns performance information (contributions, dividends, rate of return, etc) for a specific timeframe. Please note that Total Equity Timeframe and Rate of Returns are experimental features. Please contact support@snaptrade.com if you notice any inconsistencies.\n         * @summary Get performance information for a specific timeframe\n         * @param {TransactionsAndReportingApiGetReportingCustomRangeRequest} requestParameters Request parameters.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getReportingCustomRange(requestParameters, options) {\n            return localVarFp.getReportingCustomRange(requestParameters, options).then((request) => request(axios, basePath));\n        },\n    };\n};\nexports.TransactionsAndReportingApiFactory = TransactionsAndReportingApiFactory;\n/**\n * TransactionsAndReportingApiGenerated - object-oriented interface\n * @export\n * @class TransactionsAndReportingApiGenerated\n * @extends {BaseAPI}\n */\nclass TransactionsAndReportingApiGenerated extends base_1.BaseAPI {\n    /**\n     * This endpoint is being deprecated but will continue to be available for use via SDKs, please use [the account level endpoint](/reference/Account%20Information/AccountInformation_getAccountActivities) if possible  Returns all historical transactions for the specified user and filtering criteria. It\\'s recommended to use `startDate` and `endDate` to paginate through the data, as the response may be very large for accounts with a long history and/or a lot of activity. There\\'s a max number of 10000 transactions returned per request.  There is no guarantee to the ordering of the transactions returned. Please sort the transactions based on the `trade_date` field if you need them in a specific order.  The data returned here is always cached and refreshed once a day.\n     * @summary Get transaction history for a user\n     * @param {TransactionsAndReportingApiGetActivitiesRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof TransactionsAndReportingApiGenerated\n     */\n    getActivities(requestParameters, options) {\n        return (0, exports.TransactionsAndReportingApiFp)(this.configuration).getActivities(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * Returns performance information (contributions, dividends, rate of return, etc) for a specific timeframe. Please note that Total Equity Timeframe and Rate of Returns are experimental features. Please contact support@snaptrade.com if you notice any inconsistencies.\n     * @summary Get performance information for a specific timeframe\n     * @param {TransactionsAndReportingApiGetReportingCustomRangeRequest} requestParameters Request parameters.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof TransactionsAndReportingApiGenerated\n     */\n    getReportingCustomRange(requestParameters, options) {\n        return (0, exports.TransactionsAndReportingApiFp)(this.configuration).getReportingCustomRange(requestParameters, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.TransactionsAndReportingApiGenerated = TransactionsAndReportingApiGenerated;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionsAndReportingApi = void 0;\nconst transactions_and_reporting_api_generated_1 = require(\"./transactions-and-reporting-api-generated\");\n__exportStar(require(\"./transactions-and-reporting-api-generated\"), exports);\nclass TransactionsAndReportingApi extends transactions_and_reporting_api_generated_1.TransactionsAndReportingApiGenerated {\n}\nexports.TransactionsAndReportingApi = TransactionsAndReportingApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api/account-information-api\"), exports);\n__exportStar(require(\"./api/api-status-api\"), exports);\n__exportStar(require(\"./api/authentication-api\"), exports);\n__exportStar(require(\"./api/connections-api\"), exports);\n__exportStar(require(\"./api/options-api\"), exports);\n__exportStar(require(\"./api/reference-data-api\"), exports);\n__exportStar(require(\"./api/trading-api\"), exports);\n__exportStar(require(\"./api/transactions-and-reporting-api\"), exports);\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nclass Configuration {\n    constructor(param = {}) {\n        var _a;\n        this.consumerKey = param.consumerKey;\n        this.apiKey = param.apiKey;\n        if (this.apiKey === undefined) {\n            this.apiKey = {};\n            if (param.clientId !== undefined)\n                this.apiKey[\"clientId\"] = param.clientId;\n            if (param.signature !== undefined)\n                this.apiKey[\"signature\"] = param.signature;\n            if (param.timestamp !== undefined)\n                this.apiKey[\"timestamp\"] = param.timestamp;\n        }\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = (_a = param.baseOptions) !== null && _a !== void 0 ? _a : {};\n        this.userAgent = param.userAgent === undefined ? \"Konfig/9.0.145/typescript\" : param.userAgent;\n        this.formDataCtor = param.formDataCtor;\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\nexports.Configuration = Configuration;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./account\"), exports);\n__exportStar(require(\"./account-balance\"), exports);\n__exportStar(require(\"./account-balance-total\"), exports);\n__exportStar(require(\"./account-holdings\"), exports);\n__exportStar(require(\"./account-holdings-account\"), exports);\n__exportStar(require(\"./account-information-get-user-account-order-detail-request\"), exports);\n__exportStar(require(\"./account-order-record\"), exports);\n__exportStar(require(\"./account-order-record-child-brokerage-order-ids\"), exports);\n__exportStar(require(\"./account-order-record-option-symbol\"), exports);\n__exportStar(require(\"./account-order-record-quote-currency\"), exports);\n__exportStar(require(\"./account-order-record-quote-universal-symbol\"), exports);\n__exportStar(require(\"./account-order-record-status\"), exports);\n__exportStar(require(\"./account-order-record-universal-symbol\"), exports);\n__exportStar(require(\"./account-simple\"), exports);\n__exportStar(require(\"./account-sync-status\"), exports);\n__exportStar(require(\"./account-universal-activity\"), exports);\n__exportStar(require(\"./account-universal-activity-currency\"), exports);\n__exportStar(require(\"./account-universal-activity-option-symbol\"), exports);\n__exportStar(require(\"./account-universal-activity-symbol\"), exports);\n__exportStar(require(\"./action-strict\"), exports);\n__exportStar(require(\"./action-strict-with-options\"), exports);\n__exportStar(require(\"./authentication-login-snap-trade-user200-response\"), exports);\n__exportStar(require(\"./balance\"), exports);\n__exportStar(require(\"./balance-currency\"), exports);\n__exportStar(require(\"./brokerage\"), exports);\n__exportStar(require(\"./brokerage-authorization\"), exports);\n__exportStar(require(\"./brokerage-authorization-disabled-confirmation\"), exports);\n__exportStar(require(\"./brokerage-authorization-refresh-confirmation\"), exports);\n__exportStar(require(\"./brokerage-authorization-type-read-only\"), exports);\n__exportStar(require(\"./brokerage-authorization-type-read-only-brokerage\"), exports);\n__exportStar(require(\"./brokerage-instrument\"), exports);\n__exportStar(require(\"./brokerage-instruments-response\"), exports);\n__exportStar(require(\"./brokerage-type\"), exports);\n__exportStar(require(\"./cancel-order-response\"), exports);\n__exportStar(require(\"./child-brokerage-order-ids\"), exports);\n__exportStar(require(\"./connections-session-events200-response-inner\"), exports);\n__exportStar(require(\"./crypto-order-form\"), exports);\n__exportStar(require(\"./crypto-order-preview\"), exports);\n__exportStar(require(\"./crypto-order-preview-estimated-fee\"), exports);\n__exportStar(require(\"./crypto-trading-instrument\"), exports);\n__exportStar(require(\"./cryptocurrency-pair\"), exports);\n__exportStar(require(\"./cryptocurrency-pair-quote\"), exports);\n__exportStar(require(\"./currency\"), exports);\n__exportStar(require(\"./delete-user-response\"), exports);\n__exportStar(require(\"./dividend-at-date\"), exports);\n__exportStar(require(\"./encrypted-response\"), exports);\n__exportStar(require(\"./encrypted-response-encrypted-message-data\"), exports);\n__exportStar(require(\"./exchange\"), exports);\n__exportStar(require(\"./exchange-rate-pairs\"), exports);\n__exportStar(require(\"./figi-instrument\"), exports);\n__exportStar(require(\"./holdings-status\"), exports);\n__exportStar(require(\"./login-redirect-uri\"), exports);\n__exportStar(require(\"./manual-trade\"), exports);\n__exportStar(require(\"./manual-trade-and-impact\"), exports);\n__exportStar(require(\"./manual-trade-balance\"), exports);\n__exportStar(require(\"./manual-trade-form\"), exports);\n__exportStar(require(\"./manual-trade-form-bracket\"), exports);\n__exportStar(require(\"./manual-trade-form-notional-value\"), exports);\n__exportStar(require(\"./manual-trade-form-with-options\"), exports);\n__exportStar(require(\"./manual-trade-impact\"), exports);\n__exportStar(require(\"./manual-trade-replace-form\"), exports);\n__exportStar(require(\"./manual-trade-symbol\"), exports);\n__exportStar(require(\"./mleg-action-strict\"), exports);\n__exportStar(require(\"./mleg-instrument-type\"), exports);\n__exportStar(require(\"./mleg-leg\"), exports);\n__exportStar(require(\"./mleg-order-response\"), exports);\n__exportStar(require(\"./mleg-order-type-strict\"), exports);\n__exportStar(require(\"./mleg-price-effect-strict\"), exports);\n__exportStar(require(\"./mleg-trade-form\"), exports);\n__exportStar(require(\"./mleg-trading-instrument\"), exports);\n__exportStar(require(\"./model400-failed-request-response\"), exports);\n__exportStar(require(\"./model401-failed-request-response\"), exports);\n__exportStar(require(\"./model402-brokerage-auth-already-disabled-exception\"), exports);\n__exportStar(require(\"./model402-brokerage-auth-disabled-response\"), exports);\n__exportStar(require(\"./model403-failed-request-response\"), exports);\n__exportStar(require(\"./model403-feature-not-enabled-response\"), exports);\n__exportStar(require(\"./model404-failed-request-response\"), exports);\n__exportStar(require(\"./model425-failed-request-response\"), exports);\n__exportStar(require(\"./model500-unexpected-exception-response\"), exports);\n__exportStar(require(\"./monthly-dividends\"), exports);\n__exportStar(require(\"./net-contributions\"), exports);\n__exportStar(require(\"./net-dividend\"), exports);\n__exportStar(require(\"./notional-value\"), exports);\n__exportStar(require(\"./option-brokerage-symbol\"), exports);\n__exportStar(require(\"./option-chain-inner\"), exports);\n__exportStar(require(\"./option-chain-inner-chain-per-root-inner\"), exports);\n__exportStar(require(\"./option-chain-inner-chain-per-root-inner-chain-per-strike-price-inner\"), exports);\n__exportStar(require(\"./option-leg\"), exports);\n__exportStar(require(\"./option-strategy\"), exports);\n__exportStar(require(\"./option-strategy-legs-inner\"), exports);\n__exportStar(require(\"./options-position\"), exports);\n__exportStar(require(\"./options-position-currency\"), exports);\n__exportStar(require(\"./options-symbol\"), exports);\n__exportStar(require(\"./order-type-strict\"), exports);\n__exportStar(require(\"./order-updated-response\"), exports);\n__exportStar(require(\"./paginated-universal-activity\"), exports);\n__exportStar(require(\"./pagination-details\"), exports);\n__exportStar(require(\"./partner-data\"), exports);\n__exportStar(require(\"./past-value\"), exports);\n__exportStar(require(\"./performance-custom\"), exports);\n__exportStar(require(\"./position\"), exports);\n__exportStar(require(\"./position-currency\"), exports);\n__exportStar(require(\"./position-symbol\"), exports);\n__exportStar(require(\"./rate-of-return-object\"), exports);\n__exportStar(require(\"./rate-of-return-response\"), exports);\n__exportStar(require(\"./recent-orders-response\"), exports);\n__exportStar(require(\"./security-type\"), exports);\n__exportStar(require(\"./session-event\"), exports);\n__exportStar(require(\"./simple-order-form\"), exports);\n__exportStar(require(\"./snap-trade-holdings-account\"), exports);\n__exportStar(require(\"./snap-trade-holdings-total-value\"), exports);\n__exportStar(require(\"./snap-trade-login-user-request-body\"), exports);\n__exportStar(require(\"./snap-trade-register-user-request-body\"), exports);\n__exportStar(require(\"./status\"), exports);\n__exportStar(require(\"./stop-loss\"), exports);\n__exportStar(require(\"./strategy-order-record\"), exports);\n__exportStar(require(\"./strategy-quotes\"), exports);\n__exportStar(require(\"./strategy-quotes-greek\"), exports);\n__exportStar(require(\"./sub-period-return-rate\"), exports);\n__exportStar(require(\"./symbol\"), exports);\n__exportStar(require(\"./symbol-currency\"), exports);\n__exportStar(require(\"./symbol-exchange\"), exports);\n__exportStar(require(\"./symbol-figi-instrument\"), exports);\n__exportStar(require(\"./symbol-query\"), exports);\n__exportStar(require(\"./symbols-quotes-inner\"), exports);\n__exportStar(require(\"./take-profit\"), exports);\n__exportStar(require(\"./time-in-force-strict\"), exports);\n__exportStar(require(\"./trading-instrument\"), exports);\n__exportStar(require(\"./trading-search-cryptocurrency-pair-instruments200-response\"), exports);\n__exportStar(require(\"./transactions-status\"), exports);\n__exportStar(require(\"./usexchange\"), exports);\n__exportStar(require(\"./underlying-symbol\"), exports);\n__exportStar(require(\"./underlying-symbol-exchange\"), exports);\n__exportStar(require(\"./underlying-symbol-type\"), exports);\n__exportStar(require(\"./universal-activity\"), exports);\n__exportStar(require(\"./universal-symbol\"), exports);\n__exportStar(require(\"./user-idand-secret\"), exports);\n__exportStar(require(\"./validated-trade-body\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnaptradeCustom = void 0;\nclass SnaptradeCustom {\n    constructor(configurationParameters) { }\n}\nexports.SnaptradeCustom = SnaptradeCustom;\n","\"use strict\";\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Snaptrade = void 0;\nconst api_1 = require(\"./api\");\nconst configuration_1 = require(\"./configuration\");\nconst client_custom_1 = require(\"./client-custom\");\nclass Snaptrade extends client_custom_1.SnaptradeCustom {\n    constructor(configurationParameters = {}) {\n        super(configurationParameters);\n        const configuration = new configuration_1.Configuration(configurationParameters);\n        this.accountInformation = new api_1.AccountInformationApi(configuration);\n        this.apiStatus = new api_1.ApiStatusApi(configuration);\n        this.authentication = new api_1.AuthenticationApi(configuration);\n        this.connections = new api_1.ConnectionsApi(configuration);\n        this.options = new api_1.OptionsApi(configuration);\n        this.referenceData = new api_1.ReferenceDataApi(configuration);\n        this.trading = new api_1.TradingApi(configuration);\n        this.transactionsAndReporting = new api_1.TransactionsAndReportingApi(configuration);\n    }\n}\nexports.Snaptrade = Snaptrade;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/*\nSnapTrade\n\nConnect brokerage accounts to your app for live positions and trading\n\nThe version of the OpenAPI document: 1.0.0\nContact: api@snaptrade.com\n\nNOTE: This file is auto generated by Konfig (https://konfigthis.com).\n*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./configuration\"), exports);\n__exportStar(require(\"./models\"), exports);\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./error\"), exports);\n","/**\n * SnapTrade API Client\n * Converted from Python implementation\n * Handles all interactions with SnapTrade API for brokerage integration\n */\n\nimport { Snaptrade } from 'snaptrade-typescript-sdk';\nimport type {\n  RegisterUserResponse,\n  SnapTradeUser,\n  BrokerageAuthorization,\n  Account,\n  Balance,\n  Position,\n  AccountHoldings,\n  Activity,\n  SymbolSearchResult,\n  TradeImpact,\n  AccountOrderRecord,\n  OptionPosition,\n  SymbolsQuotesInner,\n} from './types';\n\nclass SnapTradeService {\n  private client: Snaptrade;\n\n  constructor() {\n    const clientId = process.env.SNAPTRADE_CLIENT_ID;\n    const consumerKey = process.env.SNAPTRADE_CONSUMER_KEY;\n\n    if (!clientId || !consumerKey) {\n      throw new Error('SnapTrade credentials not configured');\n    }\n\n    this.client = new Snaptrade({\n      clientId,\n      consumerKey,\n    });\n  }\n\n  // ========== User Management ==========\n\n  /**\n   * Register a new user with SnapTrade\n   * @param userId - Unique identifier for the user (use Clerk user ID)\n   * @returns User ID and user secret\n   */\n  async registerUser(userId: string): Promise<RegisterUserResponse> {\n    try {\n      const response = await this.client.authentication.registerSnapTradeUser({\n        userId,\n      });\n\n      return {\n        userId: response.data.userId || userId,\n        userSecret: response.data.userSecret || '',\n      };\n    } catch (error: any) {\n      console.error(`Error registering user ${userId}:`, error);\n      if (error.responseBody) {\n        console.error('SnapTrade API Response:', JSON.stringify(error.responseBody, null, 2));\n      }\n\n      // Check if user already exists (error code 1010)\n      if (error.responseBody?.code === '1010' || error.responseBody?.detail?.includes('already exist')) {\n        console.log(`User ${userId} already registered with SnapTrade`);\n        // Throw a specific error that can be caught upstream\n        const userExistsError = new Error('USER_ALREADY_EXISTS');\n        (userExistsError as any).code = 'USER_ALREADY_EXISTS';\n        throw userExistsError;\n      }\n\n      throw new Error(`Failed to register user: ${error.message || error}`);\n    }\n  }\n\n  /**\n   * Delete a SnapTrade user\n   * @param userId - SnapTrade user ID\n   */\n  async deleteUser(userId: string): Promise<boolean> {\n    try {\n      await this.client.authentication.deleteSnapTradeUser({\n        userId,\n      });\n      return true;\n    } catch (error) {\n      console.error(`Error deleting user ${userId}:`, error);\n      throw new Error(`Failed to delete user: ${error}`);\n    }\n  }\n\n  // ========== Connection Management ==========\n\n  /**\n   * Generate connection portal URL for user to connect brokerage\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @returns Connection portal URL\n   */\n  async getRedirectUri(userId: string, userSecret: string): Promise<string> {\n    try {\n      const response = await this.client.authentication.loginSnapTradeUser({\n        userId,\n        userSecret,\n      });\n\n      return response.data.redirectURI || '';\n    } catch (error) {\n      console.error(`Error getting redirect URI for user ${userId}:`, error);\n      throw new Error(`Failed to get redirect URI: ${error}`);\n    }\n  }\n\n  /**\n   * Get all brokerage connections for a user\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @returns List of brokerage authorizations\n   */\n  async listBrokerageAuthorizations(\n    userId: string,\n    userSecret: string\n  ): Promise<BrokerageAuthorization[]> {\n    try {\n      const response = await this.client.connections.listBrokerageAuthorizations({\n        userId,\n        userSecret,\n      });\n\n      return response.data as BrokerageAuthorization[];\n    } catch (error) {\n      console.error(`Error listing authorizations for user ${userId}:`, error);\n      throw new Error(`Failed to list authorizations: ${error}`);\n    }\n  }\n\n  /**\n   * Remove a brokerage connection\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param authorizationId - Authorization ID to remove\n   */\n  async deleteBrokerageAuthorization(\n    userId: string,\n    userSecret: string,\n    authorizationId: string\n  ): Promise<boolean> {\n    try {\n      await this.client.connections.removeBrokerageAuthorization({\n        authorizationId,\n        userId,\n        userSecret,\n      });\n      return true;\n    } catch (error) {\n      console.error(`Error deleting authorization ${authorizationId}:`, error);\n      throw new Error(`Failed to delete authorization: ${error}`);\n    }\n  }\n\n  /**\n   * Refresh brokerage connection to get latest data\n   * @param authorizationId - Authorization ID to refresh\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   */\n  async refreshBrokerageAuthorization(\n    authorizationId: string,\n    userId: string,\n    userSecret: string\n  ): Promise<any> {\n    try {\n      const response = await this.client.connections.refreshBrokerageAuthorization({\n        authorizationId,\n        userId,\n        userSecret,\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error refreshing authorization ${authorizationId}:`, error);\n      throw new Error(`Failed to refresh authorization: ${error}`);\n    }\n  }\n\n  // ========== Account Data ==========\n\n  /**\n   * Get all accounts for a user\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @returns List of accounts\n   */\n  async listUserAccounts(userId: string, userSecret: string): Promise<Account[]> {\n    try {\n      const response = await this.client.accountInformation.listUserAccounts({\n        userId,\n        userSecret,\n      });\n\n      return response.data as Account[];\n    } catch (error) {\n      console.error(`Error listing accounts for user ${userId}:`, error);\n      throw new Error(`Failed to list accounts: ${error}`);\n    }\n  }\n\n  /**\n   * Get account balance information\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @returns Account balance data\n   */\n  async getAccountBalances(\n    userId: string,\n    userSecret: string,\n    accountId: string\n  ): Promise<Balance[]> {\n    try {\n      const response = await this.client.accountInformation.getUserAccountBalance({\n        userId,\n        userSecret,\n        accountId,\n      });\n\n      return response.data as Balance[];\n    } catch (error) {\n      console.error(`Error getting balance for account ${accountId}:`, error);\n      throw new Error(`Failed to get account balance: ${error}`);\n    }\n  }\n\n  /**\n   * Get current positions for an account\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @returns List of positions\n   */\n  async getAccountPositions(\n    userId: string,\n    userSecret: string,\n    accountId: string\n  ): Promise<Position[]> {\n    try {\n      const response = await this.client.accountInformation.getUserAccountPositions({\n        userId,\n        userSecret,\n        accountId,\n      });\n\n      return response.data as Position[];\n    } catch (error) {\n      console.error(`Error getting positions for account ${accountId}:`, error);\n      throw new Error(`Failed to get account positions: ${error}`);\n    }\n  }\n\n  /**\n   * Get all holdings (balances + positions) for an account\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @returns Account holdings data\n   */\n  async getAllHoldings(\n    userId: string,\n    userSecret: string,\n    accountId: string\n  ): Promise<AccountHoldings> {\n    try {\n      const response = await this.client.accountInformation.getUserHoldings({\n        userId,\n        userSecret,\n        accountId,\n      });\n\n      return response.data as AccountHoldings;\n    } catch (error) {\n      console.error(`Error getting holdings for account ${accountId}:`, error);\n      throw new Error(`Failed to get account holdings: ${error}`);\n    }\n  }\n\n  /**\n   * Get recent account activities/orders\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @returns List of activities\n   */\n  async getAccountActivities(\n    userId: string,\n    userSecret: string,\n    accountId: string\n  ): Promise<Activity[]> {\n    try {\n      const response = await this.client.transactionsAndReporting.getActivities({\n        userId,\n        userSecret,\n        accountId,\n      });\n\n      return response.data as Activity[];\n    } catch (error) {\n      console.error(`Error getting activities for account ${accountId}:`, error);\n      throw new Error(`Failed to get account activities: ${error}`);\n    }\n  }\n\n  // ========== Trading ==========\n\n  /**\n   * Search for symbols to get universal symbol ID\n   * Does not require user authentication\n   * @param query - Search query (e.g., \"AAPL\")\n   * @returns List of matching symbols\n   */\n  async searchSymbols(query: string): Promise<SymbolSearchResult[]> {\n    try {\n      const response = await this.client.referenceData.getSymbols({\n        substring: query,\n      });\n\n      return response.data as SymbolSearchResult[];\n    } catch (error) {\n      console.error(`Error searching symbols with query '${query}':`, error);\n      throw new Error(`Failed to search symbols: ${error}`);\n    }\n  }\n\n  /**\n   * Get real-time stock quote for a symbol\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @param symbol - Stock symbol (e.g., 'AAPL')\n   * @returns Quote data with price, bid, ask\n   */\n  async getStockQuote(\n    userId: string,\n    userSecret: string,\n    accountId: string,\n    symbol: string\n  ): Promise<{\n    symbol: string;\n    price: number;\n    bidPrice: number;\n    askPrice: number;\n    lastPrice: number;\n    universalSymbolId: string;\n    symbolData: any;\n  }> {\n    try {\n      // First search for the symbol\n      const symbols = await this.searchSymbols(symbol);\n\n      if (!symbols || symbols.length === 0) {\n        throw new Error(`Symbol '${symbol}' not found`);\n      }\n\n      // Find exact match or use first result\n      const matchedSymbol = symbols.find(\n        (s) => s.symbol?.symbol?.toUpperCase() === symbol.toUpperCase()\n      ) || symbols[0];\n\n      const universalSymbolId = matchedSymbol.symbol?.id || '';\n\n      // Use check trade impact to get current price\n      const impact = await this.checkTradeImpact(\n        userId,\n        userSecret,\n        accountId,\n        'BUY',\n        universalSymbolId,\n        'Market',\n        1\n      );\n\n      const trade = impact.trade || {};\n\n      return {\n        symbol: symbol.toUpperCase(),\n        price: trade.price || 0,\n        bidPrice: trade.bidPrice || 0,\n        askPrice: trade.askPrice || 0,\n        lastPrice: trade.lastTradePrice || 0,\n        universalSymbolId,\n        symbolData: matchedSymbol,\n      };\n    } catch (error) {\n      console.error(`Error getting quote for symbol '${symbol}':`, error);\n      throw new Error(`Failed to get stock quote: ${error}`);\n    }\n  }\n\n  /**\n   * Check the impact of a trade before execution\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @param action - \"BUY\" or \"SELL\"\n   * @param universalSymbolId - Universal symbol ID from SnapTrade\n   * @param orderType - \"Market\" or \"Limit\"\n   * @param quantity - Number of shares/units\n   * @param price - Limit price (optional, required for limit orders)\n   * @returns Trade impact data including remaining cash and commissions\n   */\n  async checkTradeImpact(\n    userId: string,\n    userSecret: string,\n    accountId: string,\n    action: 'BUY' | 'SELL',\n    universalSymbolId: string,\n    orderType: 'Market' | 'Limit',\n    quantity: number,\n    price?: number\n  ): Promise<TradeImpact> {\n    try {\n      const body: any = {\n        account_id: accountId,\n        action: action.toUpperCase(),\n        universal_symbol_id: universalSymbolId,\n        order_type: orderType,\n        time_in_force: 'Day',\n        units: quantity,\n      };\n\n      if (price && orderType.toLowerCase() === 'limit') {\n        body.price = price;\n      }\n\n      const response = await this.client.trading.getOrderImpact({\n        userId,\n        userSecret,\n        manualTradeForm: body,\n      });\n\n      return response.data as TradeImpact;\n    } catch (error) {\n      console.error('Error checking trade impact:', error);\n      throw new Error(`Failed to check trade impact: ${error}`);\n    }\n  }\n\n  /**\n   * Place a trade order\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param tradeId - Trade ID from checkTradeImpact (expires in 5 minutes)\n   * @param waitToConfirm - Wait for broker confirmation\n   * @returns Order confirmation data\n   */\n  async placeOrder(\n    userId: string,\n    userSecret: string,\n    tradeId: string,\n    waitToConfirm: boolean = true\n  ): Promise<AccountOrderRecord> {\n    try {\n      const response = await this.client.trading.placeOrder({\n        tradeId,\n        userId,\n        userSecret,\n        waitToConfirm,\n      });\n\n      return response.data as AccountOrderRecord;\n    } catch (error) {\n      console.error('Error placing order:', error);\n      throw new Error(`Failed to place order: ${error}`);\n    }\n  }\n\n  /**\n   * Cancel an existing order\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @param orderId - Brokerage order ID\n   */\n  async cancelOrder(\n    userId: string,\n    userSecret: string,\n    accountId: string,\n    orderId: string\n  ): Promise<boolean> {\n    try {\n      await this.client.trading.cancelUserAccountOrder({\n        userId,\n        userSecret,\n        accountId,\n        tradingCancelUserAccountOrderRequest: {\n          brokerage_order_id: orderId,\n        },\n      });\n      return true;\n    } catch (error) {\n      console.error(`Error canceling order ${orderId}:`, error);\n      throw new Error(`Failed to cancel order: ${error}`);\n    }\n  }\n\n  /**\n   * Get option holdings/positions for an account\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @returns List of option positions\n   */\n  async getOptionHoldings(\n    userId: string,\n    userSecret: string,\n    accountId: string\n  ): Promise<OptionPosition[]> {\n    try {\n      const response = await this.client.options.listOptionHoldings({\n        userId,\n        userSecret,\n        accountId,\n      });\n\n      return response.data as OptionPosition[];\n    } catch (error) {\n      console.error(`Error getting option holdings for account ${accountId}:`, error);\n      throw new Error(`Failed to get option holdings: ${error}`);\n    }\n  }\n\n  /**\n   * Get real-time quotes for symbols\n   * @param userId - SnapTrade user ID\n   * @param userSecret - SnapTrade user secret\n   * @param accountId - Account ID\n   * @param symbols - Comma-separated list of symbols or universal symbol IDs\n   * @param useTicker - True if using ticker symbols, False for universal symbol IDs\n   * @returns List of quote objects\n   */\n  async getAccountQuotes(\n    userId: string,\n    userSecret: string,\n    accountId: string,\n    symbols: string,\n    useTicker: boolean = true\n  ): Promise<SymbolsQuotesInner[]> {\n    try {\n      const response = await this.client.trading.getUserAccountQuotes({\n        userId,\n        userSecret,\n        symbols,\n        accountId,\n        useTicker,\n      });\n\n      return response.data as SymbolsQuotesInner[];\n    } catch (error) {\n      console.error(`Error getting quotes for symbols '${symbols}':`, error);\n      throw new Error(`Failed to get account quotes: ${error}`);\n    }\n  }\n}\n\n// Export singleton instance\nexport const snaptradeService = new SnapTradeService();\nexport default snaptradeService;\n"],"names":["utils","prototype","PlatformFormData","encode","url","crypto","FormData","platform","defaults","AxiosHeaders","stream","util","readBlob","Readable","zlib","followRedirects","proxyFromEnv","callbackify","EventEmitter","formDataToStream","AxiosTransformStream","https","http","ZlibHeaderTransformStream","composeSignals","validators","InterceptorManager","Axios","CancelToken","HttpStatusCode"],"mappings":"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S,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,8BCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,gCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,OAAO,CAAK,iCCA3D,OA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","ignoreList":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218]}