{"version":3,"sources":["turbopack:///[project]/src/app/api/trades/[id]/analytics/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["/**\n * Trade Analytics API - Get comprehensive analytics for a specific trade\n * GET /api/trades/[id]/analytics\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { auth } from '@clerk/nextjs/server';\nimport { createClient } from '@/lib/supabase/server';\nimport { snaptradeService } from '@/lib/snaptrade/client';\n\ninterface TradeAnalytics {\n  // Basic Trade Info\n  tradeId: string;\n  symbol: string;\n  description: string;\n  action: 'BUY' | 'SELL';\n  status: string;\n\n  // Entry Details\n  entryDate: string;\n  entryPrice: number;\n  units: number;\n  entryValue: number;\n\n  // Exit Details (if closed)\n  exitDate?: string;\n  exitPrice?: number;\n  exitValue?: number;\n\n  // P&L Breakdown\n  grossPL?: number;\n  fees: number;\n  netPL?: number;\n  returnPercent?: number;\n\n  // Execution Quality\n  orderType: string;\n  limitPrice?: number;\n  slippage?: number;\n  fillRate: number;\n\n  // Time Metrics\n  holdDuration?: number; // in hours\n  executionTime?: number; // time from order to fill in seconds\n\n  // Position Sizing\n  portfolioValueAtEntry?: number;\n  positionSizePercent?: number;\n\n  // Current Position (if still open)\n  currentPrice?: number;\n  currentValue?: number;\n  unrealizedPL?: number;\n\n  // Market Context\n  marketHours: boolean;\n\n  // Related Orders (stop loss, take profit)\n  relatedOrders?: any[];\n}\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { userId } = await auth();\n\n    if (!userId) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { id: orderId } = await params;\n\n    // Get user's SnapTrade credentials\n    const supabase = await createClient();\n    const { data: user, error: userError } = await supabase\n      .from('users')\n      .select('snaptrade_user_id, snaptrade_user_secret, snaptrade_account_id')\n      .eq('clerk_user_id', userId)\n      .single();\n\n    if (userError || !user?.snaptrade_user_id || !user?.snaptrade_account_id) {\n      return NextResponse.json(\n        { error: 'SnapTrade account not connected' },\n        { status: 400 }\n      );\n    }\n\n    // Fetch all orders to find the specific one\n    const ordersResponse = await fetch(\n      `https://api.snaptrade.com/api/v1/accounts/${user.snaptrade_account_id}/orders?userId=${user.snaptrade_user_id}&userSecret=${user.snaptrade_user_secret}`,\n      {\n        method: 'GET',\n        headers: {\n          'ConsumerKey': process.env.SNAPTRADE_CONSUMER_KEY!,\n        },\n      }\n    );\n\n    if (!ordersResponse.ok) {\n      throw new Error('Failed to fetch orders');\n    }\n\n    const orders = await ordersResponse.json();\n    const order = orders.find((o: any) => o.id === orderId);\n\n    if (!order) {\n      return NextResponse.json(\n        { error: 'Order not found' },\n        { status: 404 }\n      );\n    }\n\n    // Get account activities for fee and execution details\n    const activities = await snaptradeService.getAccountActivities(\n      user.snaptrade_user_id,\n      user.snaptrade_user_secret,\n      user.snaptrade_account_id\n    );\n\n    // Find matching activity\n    const matchingActivity = activities.find(\n      (a) => a.symbol?.id === order.symbol?.id &&\n      Math.abs(new Date(a.trade_date).getTime() - new Date(order.time_executed || order.time_placed).getTime()) < 60000\n    );\n\n    // Get current position to calculate unrealized P&L if order is still open\n    let currentPosition = null;\n    let currentPrice = null;\n\n    if (order.status === 'EXECUTED' && order.action === 'BUY') {\n      try {\n        const positions = await snaptradeService.getAccountPositions(\n          user.snaptrade_user_id,\n          user.snaptrade_user_secret,\n          user.snaptrade_account_id\n        );\n\n        currentPosition = positions.find(\n          (p) => p.symbol?.id === order.symbol?.id\n        );\n\n        if (currentPosition) {\n          currentPrice = currentPosition.price;\n        }\n      } catch (error) {\n        console.error('Error fetching positions:', error);\n      }\n    }\n\n    // Get portfolio value at entry for position sizing\n    let portfolioValueAtEntry = null;\n    try {\n      const holdings = await snaptradeService.getAllHoldings(\n        user.snaptrade_user_id,\n        user.snaptrade_user_secret,\n        user.snaptrade_account_id\n      );\n      portfolioValueAtEntry = holdings.total_value?.amount || null;\n    } catch (error) {\n      console.error('Error fetching holdings:', error);\n    }\n\n    // Calculate metrics\n    const entryPrice = order.executed_price || order.price || 0;\n    const units = order.filled_units || order.units || 0;\n    const entryValue = entryPrice * units;\n    const fees = matchingActivity?.fee || 0;\n\n    // Calculate P&L if we have exit data\n    let grossPL, netPL, returnPercent, exitPrice, exitValue;\n    if (order.status === 'EXECUTED' && currentPrice && order.action === 'BUY') {\n      exitPrice = currentPrice;\n      exitValue = exitPrice * units;\n      grossPL = exitValue - entryValue;\n      netPL = grossPL - fees;\n      returnPercent = (netPL / entryValue) * 100;\n    }\n\n    // Calculate slippage if limit order\n    let slippage = null;\n    if (order.order_type === 'Limit' && order.limit_price) {\n      slippage = ((entryPrice - order.limit_price) / order.limit_price) * 100;\n    }\n\n    // Calculate fill rate\n    const fillRate = order.units > 0 ? (order.filled_units / order.units) * 100 : 0;\n\n    // Calculate hold duration\n    let holdDuration = null;\n    if (order.time_executed && order.status === 'EXECUTED') {\n      const entryTime = new Date(order.time_executed).getTime();\n      const currentTime = new Date().getTime();\n      holdDuration = (currentTime - entryTime) / (1000 * 60 * 60); // in hours\n    }\n\n    // Calculate execution time (order to fill)\n    let executionTime = null;\n    if (order.time_placed && order.time_executed) {\n      const placedTime = new Date(order.time_placed).getTime();\n      const executedTime = new Date(order.time_executed).getTime();\n      executionTime = (executedTime - placedTime) / 1000; // in seconds\n    }\n\n    // Position sizing\n    const positionSizePercent = portfolioValueAtEntry\n      ? (entryValue / portfolioValueAtEntry) * 100\n      : null;\n\n    // Check if trade was during market hours (rough estimate: 9:30 AM - 4:00 PM ET)\n    const tradeTime = new Date(order.time_placed);\n    const tradeHour = tradeTime.getUTCHours() - 5; // Convert to EST\n    const marketHours = tradeHour >= 9.5 && tradeHour < 16;\n\n    const analytics: TradeAnalytics = {\n      tradeId: order.id,\n      symbol: order.symbol?.symbol || '',\n      description: order.symbol?.description || '',\n      action: order.action,\n      status: order.status,\n\n      entryDate: order.time_placed,\n      entryPrice,\n      units,\n      entryValue,\n\n      exitDate: order.time_executed || undefined,\n      exitPrice,\n      exitValue,\n\n      grossPL,\n      fees,\n      netPL,\n      returnPercent,\n\n      orderType: order.order_type,\n      limitPrice: order.limit_price,\n      slippage,\n      fillRate,\n\n      holdDuration,\n      executionTime,\n\n      portfolioValueAtEntry,\n      positionSizePercent,\n\n      currentPrice,\n      currentValue: currentPrice ? currentPrice * units : undefined,\n      unrealizedPL: currentPrice ? (currentPrice * units) - entryValue - fees : undefined,\n\n      marketHours,\n\n      relatedOrders: [], // TODO: Implement related orders detection\n    };\n\n    return NextResponse.json({\n      success: true,\n      data: analytics,\n    });\n  } catch (error) {\n    console.error('Trade analytics error:', error);\n    return NextResponse.json(\n      {\n        error: error instanceof Error ? error.message : 'Failed to fetch trade analytics',\n      },\n      { status: 500 }\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/trades/[id]/analytics/route\",\n        pathname: \"/api/trades/[id]/analytics\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/trades/[id]/analytics/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/trades/[id]/analytics/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}